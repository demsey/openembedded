diff -u --recursive --new-file linux-2.6.17.14_stm22_0040_allpatch/arch/sh/boards/dgstation/cuberevo-mini-fta/mach.c linux-2.6.17.14_stm22_0040_cuberevo_ok/arch/sh/boards/dgstation/cuberevo-mini-fta/mach.c
--- linux-2.6.17.14_stm22_0040_allpatch/arch/sh/boards/dgstation/cuberevo-mini-fta/mach.c	1970-01-01 09:00:00.000000000 +0900
+++ linux-2.6.17.14_stm22_0040_cuberevo_ok/arch/sh/boards/dgstation/cuberevo-mini-fta/mach.c	2009-01-14 15:57:27.000000000 +0900
@@ -0,0 +1,69 @@
+/*
+ * arch/sh/boards/st/stb7100ref/mach.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * Machine vector for the STMicroelectronics STb7100 Reference board.
+ */
+
+#include <linux/init.h>
+
+#include <linux/pci.h>
+#include <linux/irq.h>
+
+#include <asm/system.h>
+#include <asm/io.h>
+#include <asm/machvec.h>
+#include <asm/led.h>
+#include <asm/machvec_init.h>
+
+static void __iomem *stb7100ref_ioport_map(unsigned long port, unsigned int size)
+{
+#ifdef CONFIG_BLK_DEV_ST40IDE
+        /*
+         * The IDE driver appears to use memory addresses with IO port
+         * calls. This needs fixing.
+         */
+	return (void __iomem *)port;
+#endif
+
+	/* However picking somewhere safe isn't as easy as you might think.
+	 * I used to use external ROM, but that can cause problems if you are
+	 * in the middle of updating Flash. So I'm now using the processor core
+	 * version register, which is guaranted to be available, and non-writable.
+	 */
+	return (void __iomem *)CCN_PVR;
+}
+
+static void __init stb7100ref_init_irq(void)
+{
+	/* enable individual interrupt mode for externals */
+	ctrl_outw(ctrl_inw(INTC_ICR) | INTC_ICR_IRLM, INTC_ICR);
+
+        /* Set the ILC to route external interrupts to the the INTC */
+        /* Outputs 0-3 are the interrupt pins, 4-7 are routed to the INTC */
+        ilc_route_external(ILC_EXT_IRQ0, 4, 1);
+        ilc_route_external(ILC_EXT_IRQ1, 5, 0);
+        ilc_route_external(ILC_EXT_IRQ2, 6, 0);
+#if CONFIG_STMMAC_ETH
+        ilc_route_external(70, 7, 0);
+#else
+        ilc_route_external(ILC_EXT_IRQ3, 7, 0);
+#endif
+
+        make_ipr_irq(IRL0_IRQ, IRL0_IPR_ADDR, IRL0_IPR_POS, IRL0_PRIORITY);
+        make_ipr_irq(IRL1_IRQ, IRL1_IPR_ADDR, IRL1_IPR_POS, IRL1_PRIORITY);
+        make_ipr_irq(IRL2_IRQ, IRL2_IPR_ADDR, IRL2_IPR_POS, IRL2_PRIORITY);
+        make_ipr_irq(IRL3_IRQ, IRL3_IPR_ADDR, IRL3_IPR_POS, IRL3_PRIORITY);
+}
+
+struct sh_machine_vector mv_stb7100ref __initmv = {
+	.mv_nr_irqs		= NR_IRQS,
+	.mv_init_irq		= stb7100ref_init_irq,
+	.mv_ioport_map		= stb7100ref_ioport_map,
+};
+ALIAS_MV(stb7100ref)
diff -u --recursive --new-file linux-2.6.17.14_stm22_0040_allpatch/arch/sh/boards/dgstation/cuberevo-mini-fta/Makefile linux-2.6.17.14_stm22_0040_cuberevo_ok/arch/sh/boards/dgstation/cuberevo-mini-fta/Makefile
--- linux-2.6.17.14_stm22_0040_allpatch/arch/sh/boards/dgstation/cuberevo-mini-fta/Makefile	1970-01-01 09:00:00.000000000 +0900
+++ linux-2.6.17.14_stm22_0040_cuberevo_ok/arch/sh/boards/dgstation/cuberevo-mini-fta/Makefile	2009-01-14 15:57:27.000000000 +0900
@@ -0,0 +1,5 @@
+#
+# Makefile for STMicroelectronics STb7100 Reference board
+#
+
+obj-y := setup.o mach.o
diff -u --recursive --new-file linux-2.6.17.14_stm22_0040_allpatch/arch/sh/boards/dgstation/cuberevo-mini-fta/setup.c linux-2.6.17.14_stm22_0040_cuberevo_ok/arch/sh/boards/dgstation/cuberevo-mini-fta/setup.c
--- linux-2.6.17.14_stm22_0040_allpatch/arch/sh/boards/dgstation/cuberevo-mini-fta/setup.c	1970-01-01 09:00:00.000000000 +0900
+++ linux-2.6.17.14_stm22_0040_cuberevo_ok/arch/sh/boards/dgstation/cuberevo-mini-fta/setup.c	2009-01-14 15:57:27.000000000 +0900
@@ -0,0 +1,1171 @@
+/*
+ * arch/sh/boards/st/stb7100ref/setup.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STb7100 Reference board support.
+ */
+
+#define 	FDMA	0
+
+#include <linux/config.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/stpio.h>
+#include <linux/st_soc.h>
+#include <linux/delay.h>
+#include <linux/bpa2.h>
+#include <linux/platform_device.h>
+#include <linux/mtd/physmap.h>
+#include <asm/io.h>
+#if FDMA
+#include <linux/stm/710x_fdma.h>
+#include <linux/stm/7100_fdma2_firmware.h>
+#include <linux/stm/7109_cut2_fdma2_firmware.h>
+#include <linux/stm/7109_cut3_fdma2_firmware.h>
+#else
+#include "../../st/stx710x-common-setup.h"
+#endif
+#if FDMA
+#define SYSCONF_BASE 0xb9001000
+#define SYSCONF_DEVICEID	(SYSCONF_BASE + 0x000)
+#define SYSCONF_SYS_STA(n)	(SYSCONF_BASE + 0x008 + ((n) * 4))
+#define SYSCONF_SYS_CFG(n)	(SYSCONF_BASE + 0x100 + ((n) * 4))
+
+#ifdef CONFIG_STMMAC_ETH
+#define MAC_SPEED_SEL      0x00100000 /* MAC is running at 100 Mbps speed */
+#define PHY_CLK_EXT        0x00080000 /* PHY clock is external (RMII mode)*/
+#define MII_MODE           0x00040000 /* RMII interface activated */
+#define        ETH_IF_ON           0x00010000 /* ETH interface on */
+#define DVO_ETH_PAD_DISABLE 0x00020000 /* DVO eth pad disable */
+#define STB7109ETH_RESOURCE_NAME       "stb7109eth"
+
+/* ETH MAC pad configuration */
+void stb7109eth_hw_setup(void)
+{
+       unsigned long sysconf;
+
+       sysconf = ctrl_inl(SYSCONF_SYS_CFG(7));
+       sysconf |= (DVO_ETH_PAD_DISABLE | ETH_IF_ON /*| MAC_SPEED_SEL*/);
+#ifdef CONFIG_PHY_RMII
+       sysconf |= MII_MODE; /* RMII selected*/
+#else
+       sysconf &= ~MII_MODE; /* MII selected */
+#endif
+#ifdef CONFIG_STMMAC_EXT_CLK
+        sysconf |= PHY_CLK_EXT;
+#endif
+       ctrl_outl(sysconf, SYSCONF_SYS_CFG(7));
+
+       /* Enable the external PHY interrupts */
+#if 1
+       sysconf = ctrl_inl(SYSCONF_SYS_CFG(10));
+       sysconf |= 0x0000000f;
+       ctrl_outl(sysconf, SYSCONF_SYS_CFG(10));
+
+	stpio_request_pin(3, 1, "usbsusp", STPIO_IN);
+
+       /* Configure e/net PHY clock */
+#if 0
+#ifndef CONFIG_STMMAC_EXT_CLK
+	stpio_request_pin(3, 7, STB7109ETH_RESOURCE_NAME, STPIO_ALT_OUT);
+#else
+	stpio_request_pin(3, 7, STB7109ETH_RESOURCE_NAME, STPIO_IN);
+#endif
+#endif
+#endif
+
+       return;
+}
+#endif
+#endif
+
+#define ASC2_INTEN ((unsigned int*)(0xb8032010))
+#define ASC3_INTEN ((unsigned int*)(0xb8033010))
+#define ASC3BaseAddress 0xb8033000 
+#define ASC_TX_BUFF     0x004 
+#define ASC_INT_STA     0x014 
+#define ASC_INT_STA_THE   0x04
+
+#ifdef CONFIG_BPA2
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "v4l2-video-buffers", "gfx-memory", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", NULL };
+
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x03800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x01600000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#endif
+
+static void send_fp_byte(unsigned char Data); 
+static void system_power_off(void); 
+
+static void send_fp_byte(unsigned char Data) 
+{ 
+	unsigned char *ASC_3_TX_BUFF = (unsigned char*)(ASC3BaseAddress + ASC_TX_BUFF); 
+	unsigned int *ASC_3_INT_STA = (unsigned int*)(ASC3BaseAddress + ASC_INT_STA); 
+	unsigned long Counter = 100000; 
+
+	while (((*ASC_3_INT_STA & ASC_INT_STA_THE) == 0) && --Counter); 
+	*ASC_3_TX_BUFF = Data; 
+} 
+
+static void system_power_off(void) 
+{ 
+	send_fp_byte(0x02); 
+	send_fp_byte(0x21); 
+	send_fp_byte(0x01); 
+	send_fp_byte(0x03); 
+} 
+
+/*
+ * Initialize the board
+ */
+void __init platform_setup(void)
+{
+	unsigned long sysconf;
+	unsigned long chip_revision, chip_7109;
+	static struct stpio_pin *ethreset,*usbpower;
+
+	printk("DGStation cuberevo-mini-fta board initialization\n");
+
+	sysconf = ctrl_inl(SYSCONF_DEVICEID);
+	chip_7109 = (((sysconf >> 12) & 0x3ff) == 0x02c);
+	chip_revision = (sysconf >> 28) +1;
+
+	if (chip_7109)
+		printk("STb7109 version %ld.x\n", chip_revision);
+	else
+		printk("STb7100 version %ld.x\n", chip_revision);
+
+	sysconf = ctrl_inl(SYSCONF_SYS_CFG(7));
+
+	/* SCIF_PIO_OUT_EN=0 */
+	/* Route UART2 and PWM to PIO4 instead of SCIF */
+	sysconf &= ~(1<<0);
+
+	/* Set SSC2_MUX_SEL = 0 */
+	/* Treat SSC2 as I2C instead of SSC */
+	sysconf &= ~(1<<3);
+
+	ctrl_outl(sysconf, SYSCONF_SYS_CFG(7));
+
+	/* disable interrupts to prevent a system lockup */
+       /*printk("disabling ASC IRQ enable flags to prevent a lockup\n");
+       *ASC2_INTEN = *ASC2_INTEN & ~0x000001fe;
+       *ASC3_INTEN = *ASC3_INTEN & ~0x000001fe;*/
+
+#if 0
+	/* Reset the SMSC 91C111 Ethernet chip */
+	ethreset = stpio_request_pin(2, 6, "SMSC_RST", STPIO_OUT);
+	stpio_set_pin(ethreset, 0);
+	udelay(1);
+	stpio_set_pin(ethreset, 1);
+	udelay(1);
+	stpio_set_pin(ethreset, 0);
+#endif
+	/* The ST40RTC sources its clock from clock */
+	/* generator B */
+	sysconf = ctrl_inl(SYSCONF_SYS_CFG(8));
+	ctrl_outl(sysconf | 0x2, SYSCONF_SYS_CFG(8));
+
+	/* reset the PHY */
+	//phy_reset(NULL);
+
+	/* assign power-off function */
+	pm_power_off = system_power_off;
+
+	/*
+	 * There have been two changes to the USB power enable signal:
+	 *
+	 * - 7100 upto and including cut 3.0 and 7109 1.0 generated an
+	 *   active high enables signal. From 7100 cut 3.1 and 7109 cut 2.0
+	 *   the signal changed to active low.
+	 *
+	 * - The 710x ref board (mb442) has always used power distribution
+	 *   chips which have active high enables signals (on rev A and B
+	 *   this was a TI TPS2052, rev C used the ST equivalent a ST2052).
+	 *   However rev A and B had a pull up on the enables signal, while
+	 *   rev C changed this to a pull down.
+	 *
+	 * The net effect of all this is that the easiest way to drive
+	 * this signal is ignore the USB hardware and drive it as a PIO
+	 * pin.
+	 *
+	 * (Note the USB over current input on the 710x changed from active
+	 * high to low at the same cuts, but board revs A and B had a resistor
+	 * option to select an inverted output from the TPS2052, so no
+	 * software work around is required.)
+	 */
+	usbpower=stpio_request_pin(5,7, "USBPWR", STPIO_OUT);
+	stpio_set_pin(usbpower, 0);
+
+	/* Currently all STB1 chips have problems with the sleep instruction,
+	 * so disable it here.
+	 */
+	disable_hlt();
+
+#ifdef CONFIG_STMMAC_ETH
+	stb7109eth_hw_setup();
+
+#if 0
+	/* Reset the PHY */
+	ethreset = stpio_request_pin(2, 4, "STE100P_RST", STPIO_OUT);
+	stpio_set_pin(ethreset, 1);
+	udelay(1);
+	stpio_set_pin(ethreset, 0);
+	udelay(1000);
+	stpio_set_pin(ethreset, 1);
+#endif
+#endif
+
+#ifdef CONFIG_STM_PWM
+	stpio_request_pin(4, 7, "PWM", STPIO_ALT_OUT);
+#endif
+#ifdef CONFIG_BPA2
+	printk("LOAD bpa2_parts_table\n");
+       bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+	printk("END bpa2_parts_table\n");
+#endif
+}
+
+const char *get_system_type(void)
+{
+	return "DGStation cuberevo-mini-fta board";
+}
+
+#if defined(CONFIG_STM_SSC)
+static struct resource ssc_resource[] = {
+	[0] = {
+		.start = 0xB8040000,
+		.end = 0xB8040000 + 0x108,
+		.flags = IORESOURCE_MEM,
+	},
+	[1] = {
+		.start = 0xB8041000,
+		.end = 0xB8041000 + 0x108,
+		.flags = IORESOURCE_MEM,
+	},
+	[2] = {
+		.start = 0xB8042000,
+		.end = 0xB8042000 + 0x108,
+		.flags = IORESOURCE_MEM,
+	},
+	[3] = {
+		.start = 119,
+		.end = 119,
+		.flags = IORESOURCE_IRQ,
+	},
+	[4] = {
+		.start = 118,
+		.end = 118,
+		.flags = IORESOURCE_IRQ,
+	},
+	[5] = {
+		.start = 117,
+		.end = 117,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct plat_ssc_pio_t ssc_pio[] = {
+        {2, 0, 2, 1, 0xff, 0xff},
+	{3, 0, 3, 2, 0xff, 0xff},
+	{4, 0, 4, 1, 0xff, 0xff},
+};
+#define SSC_I2C_CAPABILITY  0x1
+#define SSC_SPI_CAPABILITY  0x2
+static struct plat_ssc_data ssc_private_info = {
+	//			i2c-0			i2c-1			i2c-2
+	.capability  = (SSC_I2C_CAPABILITY<<0) | (SSC_I2C_CAPABILITY<<2) | (SSC_I2C_CAPABILITY<<4),
+	.pio         = ssc_pio
+};
+struct platform_device ssc_device = {
+	.name = "ssc",
+	.id = -1,
+	.num_resources = ARRAY_SIZE(ssc_resource),
+	.resource = ssc_resource,
+	.dev = {
+		.platform_data = &ssc_private_info
+	}
+};
+#endif
+
+static struct lirc_pio lirc_pios[] = {
+	[0] = {
+		.bank = 3,
+		.pin  = 3,
+		.dir  = STPIO_IN
+	},
+	[1] = {
+		.bank = 3,
+		.pin  = 4,
+		.dir  = STPIO_IN
+	},
+	[2] = {
+		.bank = 3,
+		.pin  = 5,
+		.dir  = STPIO_ALT_OUT
+	},
+	[3] = {
+		.bank = 3,
+		.pin  = 6,
+		.dir  = STPIO_ALT_OUT
+	}
+};
+
+static struct plat_lirc_data lirc_private_info = {
+	/* For the 7100, the clock settings will be calculated by the driver
+	 * from the system clock
+	 */
+	.irbclock	= 0, /* use current_cpu data */
+	.irbclkdiv      = 0, /* automatically calculate */
+	.irbperiodmult  = 0,
+	.irbperioddiv   = 0,
+	.irbontimemult  = 0,
+	.irbontimediv   = 0,
+	.irbrxmaxperiod = 0x5000,
+	.irbversion     = 2,
+	.sysclkdiv	= 1,
+	.rxpolarity	= 1,
+	.pio_pin_arr  = lirc_pios,
+	.num_pio_pins = ARRAY_SIZE(lirc_pios)
+};
+
+static struct resource smc91x_resources[] = {
+	[0] = {
+		.start	= 0xa2000300,
+		.end	= 0xa2000300 + 0xff,
+		.flags	= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start	= IRL0_IRQ,
+		.end	= IRL0_IRQ,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct resource st40_ohci_resources[] = {
+	/*this lot for the ohci block*/
+	[0] = {
+		.start = 0xb9100000 + 0xffc00,
+		.end  =  0xb9100000 +0xffcff,
+		.flags = IORESOURCE_MEM,
+	},
+	[1] = {
+			.start = 168,
+			.end   = 168,
+			.flags = IORESOURCE_IRQ,
+	}
+};
+static struct resource st40_ehci_resources[] = {
+	/*now this for the ehci*/
+	[0] =  {
+			.start = 0xb9100000 + 0xffe00,
+			.end = 0xb9100000 + 0xffeff,
+			.flags = IORESOURCE_MEM,
+	},
+	[1] = {
+			.start = 169,
+			.end   = 169,
+			.flags = IORESOURCE_IRQ,
+	},
+};
+
+/* Watchdog timer parameters */
+static struct resource wdt_resource[] = {
+	/* Watchdog timer only needs a register address */
+	[0] = {
+		.start = 0xFFC00008,
+		.end = 0xFFC00010,
+		.flags = IORESOURCE_MEM,
+	}
+};
+
+struct platform_device wdt_device = {
+	.name = "wdt",
+	.id = -1,
+	.num_resources = ARRAY_SIZE(wdt_resource),
+	.resource = wdt_resource,
+};
+
+static struct resource lirc_resource[]= {
+	/* This is the main LIRC register block, as defined by the spec */
+       [0] = {
+		.start = 0x18018000,
+		.end   = 0x18018000 + 0xa0,
+	        .flags = IORESOURCE_MEM
+	},
+	/* The LIRC block has one interrupt */
+	[1] = {
+	        .start = 125,
+		.end   = 125,
+	        .flags = IORESOURCE_IRQ
+	},
+};
+
+static u64 st40_dma_mask = 0xfffffff;
+
+static struct platform_device  st40_ohci_devices = {
+	.name = "ST40-ohci",
+	.id=1,
+	.dev = {
+		.dma_mask = &st40_dma_mask,
+		.coherent_dma_mask = 0xffffffful,
+#if !(FDMA)
+//		.platform_data = &usb_wrapper,
+#endif
+	},
+	.num_resources = ARRAY_SIZE(st40_ohci_resources),
+	.resource = st40_ohci_resources,
+};
+
+static struct platform_device  st40_ehci_devices = {
+	.name = "ST40-ehci",
+	.id=2,
+	.dev = {
+		.dma_mask = &st40_dma_mask,
+		.coherent_dma_mask = 0xffffffful,
+#if !(FDMA)
+//		.platform_data = &usb_wrapper,
+#endif
+	},
+	.num_resources = ARRAY_SIZE(st40_ehci_resources),
+	.resource = st40_ehci_resources,
+};
+
+static struct platform_device smc91x_device = {
+	.name		= "smc91x",
+	.id		= 0,
+	.num_resources	= ARRAY_SIZE(smc91x_resources),
+	.resource	= smc91x_resources,
+};
+
+static void phy_reset(void* bus)
+{
+	printk("phy_reset (FIXME)");
+	static struct stpio_pin *phyreset;
+
+       printk ("Resetting the network PHY\n");
+
+	if (phyreset == NULL) {
+		phyreset = stpio_request_pin(5, 3, "Phy reset", STPIO_OUT);
+	}
+
+	stpio_set_pin(phyreset, 1);
+	udelay(1);
+	stpio_set_pin(phyreset, 0);
+	udelay(1000);
+	stpio_set_pin(phyreset, 1);
+}
+
+static struct plat_stmmacenet_data eth7109_private_data = {
+	.bus_id = 0,
+	.phy_addr = 1,
+	.phy_mask = 1,
+	.phy_name = "rtl8201",
+	.pbl = 1,
+};
+
+static struct platform_device stb7109eth_device = {
+	.name           = "stmmaceth",
+	.id             = 0,
+	.num_resources  = 2,
+	.resource       = (struct resource[]) {
+		{
+	                .start = 0x18110000,
+		        .end   = 0x1811ffff,
+	        	.flags  = IORESOURCE_MEM,
+		},
+		{
+			.name   = "macirq",
+	        	.start  = 133,
+	        	.end    = 133,
+	        	.flags  = IORESOURCE_IRQ,
+		},
+	},
+	.dev = {
+		.platform_data = &eth7109_private_data,
+	}
+};
+
+static struct platform_device pdiusbd12_device = {
+	.name           = "pdiusbd12",
+	.id             = -1,
+	.num_resources  = 2,
+	.resource       = (struct resource[]) {
+		{
+	                .start = 0xa2000000,
+		        .end   = 0xa200ffff,
+	        	.flags  = IORESOURCE_MEM,
+		},
+		{
+			.name   = "usbirq",
+	        	.start  = IRL0_IRQ,
+	        	.end    = IRL0_IRQ,
+	        	.flags  = IORESOURCE_IRQ,
+		},
+	},
+};
+
+static struct platform_device lirc_device = {
+	.name           = "lirc",
+	.id             = -1,
+	.num_resources  = ARRAY_SIZE(lirc_resource),
+	.resource       = lirc_resource,
+	.dev = {
+	           .platform_data = &lirc_private_info
+	}
+};
+
+static struct resource sata_resource[]= {
+	[0] = {
+		.start = 0x18000000 + 0x01209000,
+		.end   = 0x18000000 + 0x01209000 + 0xfff,
+		.flags = IORESOURCE_MEM
+	},
+	[1] = {
+		.start = 0xaa,
+		.flags = IORESOURCE_IRQ
+	},
+};
+
+static struct plat_sata_data sata_private_info = {
+	.phy_init	= 0,
+};
+
+static struct platform_device sata_device = {
+	.name		= "stm-sata",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(sata_resource),
+	.resource	= sata_resource,
+	.dev = {
+		.platform_data = &sata_private_info,
+	}
+};
+
+static struct resource rtc_resource[]= {
+	[0] = {
+		.start = 0xffc80000,
+		.end   = 0xffc80000 + 0x40,
+		.flags = IORESOURCE_MEM
+	},
+	[1] = {
+		.start = 20,/* Alarm IRQ   */
+		.flags = IORESOURCE_IRQ
+	},
+	[2] = {
+		.start = 21,/* Periodic IRQ*/
+		.flags = IORESOURCE_IRQ
+	},
+};
+static struct platform_device rtc_device = {
+	.name		= "rtc",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(rtc_resource),
+	.resource	= rtc_resource,
+};
+
+static struct resource stm_pwm_resource[]= {
+	[0] = {
+		.start	= 0x18010000,
+		.end	= 0x18010000 + 0x67,
+		.flags	= IORESOURCE_MEM
+	},
+	[1] = {
+		.start	= 126,
+		.flags	= IORESOURCE_IRQ
+	}
+};
+
+static struct plat_stm_pwm_data pwm_private_info = {
+	.flags		= PLAT_STM_PWM_OUT1,
+};
+
+static struct platform_device stm_pwm_device = {
+	.name		= "stm-pwm",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(stm_pwm_resource),
+	.resource	= stm_pwm_resource,
+	.dev = {
+		.platform_data = &pwm_private_info,
+	}
+};
+
+#ifdef CONFIG_MTD_PHYSMAP
+static struct mtd_partition mtd_parts_table[3] = {
+	{
+	 .name = "Boot firmware",
+	 .size = 0x00040000,
+	 .offset = 0x00000000,
+	 },
+	{
+	 .name = "Kernel",
+	 .size = 0x00100000,
+	 .offset = 0x00040000,
+
+	 },
+	{
+	 .name = "Root FS",
+	 .size = MTDPART_SIZ_FULL,	/* will expand to the end of the flash */
+	 .offset = 0x00140000,
+	 }
+};
+
+static struct physmap_flash_data physmap_flash_data = {
+	.width		= 2,
+	.set_vpp	= NULL,
+	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+	.parts		= mtd_parts_table
+};
+#define physmap_flash_data_addr &physmap_flash_data
+#else
+#define physmap_flash_data_addr NULL
+#endif
+
+static struct resource physmap_flash_resource = {
+	.start		= 0x00000000,
+	.end		= 0x00800000 - 1,
+	.flags		= IORESOURCE_MEM,
+};
+
+static struct platform_device physmap_flash = {
+	.name		= "physmap-flash",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= physmap_flash_data_addr,
+	},
+	.num_resources	= 1,
+	.resource	= &physmap_flash_resource,
+};
+#if FDMA 
+/*
+ *  FDMA parameters
+ */
+
+static fdmareq_RequestConfig_t stb7100_fdma_req_config[] ={
+/*=========================== 7100 ============================================*/
+
+/*
+		Req  			RnW,    Opcode,  Transfer Incr addr,   Hold_off Initiator), */
+/*           	1-32     				 cnt 1-4  On/Off       0-2        Used) */
+
+/*0*/{STB7100_FDMA_REQ_SPDIF_TEST,  		WRITE,  OPCODE_4,  1,     ENABLE_FLG,  0,     1 },/* SPDIF Testing */
+/*1*/{STB7100_FDMA_REQ_NOT_CONN_1,   		UNUSED, UNUSED,    1,     UNUSED,      0,     1 },/* NOT CONNECTED */
+/*2*/{STB7100_FDMA_REQ_NOT_CONN_2,   		UNUSED, UNUSED,    1,     UNUSED,      0,     1 },/* NOT CONNECTED */
+/*3*/{STB7100_FDMA_REQ_VIDEO_HDMI,   		READ,   OPCODE_8,  1,     DISABLE_FLG, 0,     1 },/* Video HDMI */
+/*4*/{STB7100_FDMA_REQ_DISEQC_HALF_EMPTY,	WRITE,  OPCODE_4,  2,     DISABLE_FLG, 0,     1 },/* DiseqC half empty */
+/*5*/{STB7100_FDMA_REQ_DISEQC_HALF_FULL, 	READ,   OPCODE_4,  2,     DISABLE_FLG, 0,     1 },/* DiseqC half full */
+/*6*/{STB7100_FDMA_REQ_SH4_SCIF_RX,   		READ,   OPCODE_4,  2,     DISABLE_FLG, 0,     1 },  /* SH4/SCIF */
+/*7*/{STB7100_FDMA_REQ_SH4_SCIF_TX,   		WRITE,  OPCODE_4,  2,     DISABLE_FLG, 0,     1 },  /* SH4/SCIF */
+/*8*/{STB7100_FDMA_REQ_SSC_0_RX,   		READ,   OPCODE_2,  4,     DISABLE_FLG, 0,     1 },  /* SSC 0 rxbuff full */
+/*9*/{STB7100_FDMA_REQ_SSC_1_RX,   		READ,   OPCODE_2,  4,     DISABLE_FLG, 0,     1 },  /* SSC 1 rxbuff full */
+/*10*/{STB7100_FDMA_REQ_SSC_2_RX,  		READ,   OPCODE_2,  4,     DISABLE_FLG, 0,     1 },  /* SSC 2 rxbuff full */
+/*11*/{STB7100_FDMA_REQ_SSC_0_TX,  		WRITE,  OPCODE_2,  4,     DISABLE_FLG, 0,     1 },  /* SSC 0 txbuff empty */
+/*12*/{STB7100_FDMA_REQ_SSC_1_TX,  		WRITE,  OPCODE_2,  4,     DISABLE_FLG, 0,     1 },  /* SSC 1 txbuff empty */
+/*13*/{STB7100_FDMA_REQ_SSC_2_TX,  		WRITE,  OPCODE_2,  4,     DISABLE_FLG, 0,     1 },  /* SSC 2 txbuff empty */
+/*14*/{STB7100_FDMA_REQ_UART_0_RX,  		READ,   OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 0 rx half full */
+/*15*/{STB7100_FDMA_REQ_UART_1_RX,  		READ,   OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 1 rx half full */
+/*16*/{STB7100_FDMA_REQ_UART_2_RX,  		READ,   OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 2 rx half full */
+/*17*/{STB7100_FDMA_REQ_UART_3_RX,  		READ,   OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 3 rx half full */
+/*18*/{STB7100_FDMA_REQ_UART_0_TX,  		WRITE,  OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 0 tx half empty */
+/*19*/{STB7100_FDMA_REQ_UART_1_TX,  		WRITE,  OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 1 tx half empty */
+/*20*/{STB7100_FDMA_REQ_UART_2_TX,  		WRITE,  OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 2 tx half emtpy */
+/*21*/{STB7100_FDMA_REQ_UART_3_TX,  		WRITE,  OPCODE_1,  1,     DISABLE_FLG, 0,     1 },  /* UART 3 tx half empty */
+/*22*/{STB7100_FDMA_REQ_EXT_PIO_0,  		READ,   OPCODE_4,  1,     DISABLE_FLG, 0,     1 },  /* External 0 (PIO2bit5) hi priority */
+/*23*/{STB7100_FDMA_REQ_EXT_PIO_1,  		READ,   OPCODE_4,  1,     DISABLE_FLG, 0,     1 },  /* External 1 (PIO2bit6) hi priority */
+/*24*/{STB7100_FDMA_REQ_CPXM_DECRYPT,  		READ,   OPCODE_4,  4,     DISABLE_FLG, 0,     1 },  /* CPxM decrypted data request */
+/*25*/{STB7100_FDMA_REQ_CPXM_ENCRYPT,  		WRITE,  OPCODE_4,  4,     DISABLE_FLG, 0,     1 },  /* CPxm encrypted data request */
+/*26*/{STB7100_FDMA_REQ_PCM_0,  		WRITE,  OPCODE_4,  1,     DISABLE_FLG, 0,     1 },  /* Audio PCM Player 0 */
+/*27*/{STB7100_FDMA_REQ_PCM_1,  		WRITE,  OPCODE_4,  1,     DISABLE_FLG, 0,     1 },  /* Audio PCM Player 1 */
+/*28*/{STB7100_FDMA_REQ_PCM_READ,  		READ,   OPCODE_4,  1,     DISABLE_FLG, 1,     1 },  /* Audio PCM Reader */
+/*29*/{STB7100_FDMA_REQ_SPDIF,  		WRITE,  OPCODE_4,  2,     DISABLE_FLG, 0,     1 },  /* Audio SPDIF - 2xST4*/
+/*30*/{STB7100_FDMA_REQ_SWTS,  			WRITE,  OPCODE_16, 1,     DISABLE_FLG, 0,     1 },   /* SWTS */
+/*31*/{STB7100_FDMA_REQ_UNUSED,  		UNUSED, UNUSED,    1,     UNUSED,      0,     1 }, /* Reserved */
+
+};
+
+/*
+				Req  				RnW,    Opcode,  Transfer Incr addr,   Hold_off Initiator), */
+/*           	1-32     		 			cnt 1-4  On/Off       0-2        Used) */
+static  fdmareq_RequestConfig_t stb7109_fdma_req_config[]= {
+/*=========================== 7109 ============================================*/
+
+/*  {  Req  RnW, 						Opcode,    TransferCount  Inc,       Hold_off        Initiator), */
+/*  {               						1-32       1-4            On/Off       0-2           Used) */
+/*0*/	{STB7109_FDMA_REQ_UNUSED,			UNUSED, UNUSED,    1,     	  UNUSED,      0,     	     1 },/* NOT CONNECTED */
+/*1*/	{STB7109_FDMA_DMA_REQ_HDMI_AVI,			READ,   OPCODE_8,  1,             DISABLE_FLG, 0,            1 },  /* Video HDMI */
+/*2*/	{STB7109_FDMA_REQ_DISEQC_HALF_EMPTY,		WRITE,  OPCODE_4,  2,             DISABLE_FLG, 0,            1 },  /* DiseqC half empty */
+/*3*/	{STB7109_FDMA_REQ_DISEQC_HALF_FULL,		READ,   OPCODE_4,  2,             DISABLE_FLG, 0,            1 },  /* DiseqC half full */
+/*4*/	{STB7109_FDMA_REQ_SH4_SCIF_RX,			READ,   OPCODE_4,  2,             DISABLE_FLG, 0,            1 },  /* SH4/SCIF */
+/*5*/	{STB7109_FDMA_REQ_SH4_SCIF_TX,			WRITE,  OPCODE_4,  2,             DISABLE_FLG, 0,            1 },  /* SH4/SCIF */
+/*6*/	{STB7109_FDMA_REQ_SSC_0_RX,			READ,   OPCODE_2,  4,             DISABLE_FLG, 0,            1 },  /* SSC 0 rxbuff full */
+/*7*/	{STB7109_FDMA_REQ_SSC_1_RX,			READ,   OPCODE_2,  4,             DISABLE_FLG, 0,            1 },  /* SSC 1 rxbuff full */
+/*8*/	{STB7109_FDMA_REQ_SSC_2_RX,			READ,   OPCODE_2,  4,             DISABLE_FLG, 0,            1 },  /* SSC 2 rxbuff full */
+/*9*/	{STB7109_FDMA_REQ_SSC_0_TX,			WRITE,  OPCODE_2,  4,             DISABLE_FLG, 0,            1 },  /* SSC 0 txbuff empty */
+/*10*/	{STB7109_FDMA_REQ_SSC_1_TX,			WRITE,  OPCODE_2,  4,             DISABLE_FLG, 0,            1 },  /* SSC 1 txbuff empty */
+/*11*/	{STB7109_FDMA_REQ_SSC_2_TX,			WRITE,  OPCODE_2,  4,             DISABLE_FLG, 0,            1 },  /* SSC 1 txbuff empty */
+/*12*/  {STB7109_FDMA_REQ_UART_0_RX,			READ,   OPCODE_1,  4,             DISABLE_FLG, 0,            1 },  /* UART 0 rx half full */
+/*13*/	{STB7109_FDMA_REQ_UART_1_RX,			READ,   OPCODE_1,  4,             DISABLE_FLG, 0,            1 },  /* UART 1 rx half full */
+/*14*/	{STB7109_FDMA_REQ_UART_2_RX,			READ,   OPCODE_1,  4,             DISABLE_FLG, 0,            1 },  /* UART 2 rx half full */
+/*15*/	{STB7109_FDMA_REQ_UART_3_RX,			READ,   OPCODE_1,  4,             DISABLE_FLG, 0,            1 },  /* UART 3 rx half full */
+/*16*/	{STB7109_FDMA_REQ_UART_0_TX,			WRITE,  OPCODE_1,  1,             DISABLE_FLG, 0,            1 },  /* UART 0 tx half empty */
+/*17*/	{STB7109_FDMA_REQ_UART_1_TX,			WRITE,  OPCODE_1,  1,             DISABLE_FLG, 0,            1 },  /* UART 1 tx half empty */
+/*18*/	{STB7109_FDMA_REQ_UART_2_TX,			WRITE,  OPCODE_1,  1,             DISABLE_FLG, 0,            1 },  /* UART 2 tx half emtpy */
+/*19*/	{STB7109_FDMA_REQ_UART_3_TX,			WRITE,  OPCODE_1,  1,             DISABLE_FLG, 0,            1 },  /* UART 3 tx half empty */
+/*20*/	{STB7109_FDMA_REQ_REQ_EXT_PIO_0,		READ,   OPCODE_4,  1,             DISABLE_FLG, 0,            1 },  /* External 0 (PIO2bit5) hi priority */
+/*21*/	{STB7109_FDMA_REQ_REQ_EXT_PIO_1,		READ,   OPCODE_4,  1,             DISABLE_FLG, 0,            1 },  /* External 1 (PIO2bit6) hi priority */
+/*22*/	{STB7109_FDMA_REQ_CPXM_DECRYPT,  	     	READ,   OPCODE_4,  4,             DISABLE_FLG, 0,            1 },  /* CPxM decrypted data request */
+/*23*/  {STB7109_FDMA_REQ_CPXM_ENCRYPT,  	     	WRITE,  OPCODE_4,  4,             DISABLE_FLG, 0,            1 },  /* CPxm encrypted data request */
+/*24*/	{STB7109_FDMA_REQ_PCM_0,			WRITE,  OPCODE_4,  1,             DISABLE_FLG, 0,            0 },  /* Audio PCM Player 0 */
+/*25*/	{STB7109_FDMA_REQ_PCM_1,			WRITE,  OPCODE_4,  1,             DISABLE_FLG, 0,            0 },  /* Audio PCM Player 1 */
+/*26*/	{STB7109_FDMA_REQ_PCM_READ,			READ,   OPCODE_4,  1,             DISABLE_FLG, 0,            0 },  /* Audio PCM Reader */
+/*27*/	{STB7109_FDMA_REQ_SPDIF,			WRITE,  OPCODE_4,  1,             DISABLE_FLG, 0,            0 },  /* Audio SPDIF - 2xST4*/
+/*29*/	{STB7109_FDMA_REQ_SWTS_0,			WRITE,  OPCODE_32, 1,             DISABLE_FLG, 0,            0 },  /* SWTS 0 */
+/*29*/	{STB7109_FDMA_REQ_SWTS_1,			WRITE,  OPCODE_32, 1,             DISABLE_FLG, 0,            0 },  /* SWTS 1 */
+/*30*/	{STB7109_FDMA_REQ_SWTS_2,			WRITE,  OPCODE_32, 1,             DISABLE_FLG, 0,            0 },  /* SWTS 2 */
+/*31*/  {STB7109_FDMA_REQ_UNUSED,           		UNUSED, UNUSED,    1,             UNUSED,      0,            0 },  /* Reserved */
+};
+
+static fdma_regs_t stb7100_fdma_regs = {
+	 .fdma_id =     	  FDMA2_ID,
+	 .fdma_ver = 		  FDAM2_VER,
+	 .fdma_en= 		  FDMA2_ENABLE_REG,
+	 .fdma_clk_gate = 	  FDMA2_CLOCKGATE,
+	 .fdma_rev_id = 	  FDMA2_REV_ID,
+	 .fdma_cmd_statn = 	  STB7100_FDMA_CMD_STATn_REG,
+	 .fdma_ptrn = 		  STB7100_FDMA_PTR_REG,
+	 .fdma_cntn = 		  STB7100_FDMA_COUNT_REG,
+	 .fdma_saddrn = 	  STB7100_FDMA_SADDR_REG,
+	 .fdma_daddrn = 	  STB7100_FDMA_DADDR_REG,
+	 .fdma_req_ctln = 	  STB7100_FDMA_REQ_CTLn_REG,
+	 .fdma_cmd_sta =	  FDMA2_CMD_MBOX_STAT_REG,
+	 .fdma_cmd_set =	  FDMA2_CMD_MBOX_SET_REG,
+	 .fdma_cmd_clr = 	  FDMA2_CMD_MBOX_CLR_REG,
+	 .fdma_cmd_mask =	  FDMA2_CMD_MBOX_MASK_REG,
+	 .fdma_int_sta = 	  FDMA2_INT_STAT_REG,
+	 .fdma_int_set = 	  FDMA2_INT_SET_REG,
+	 .fdma_int_clr= 	  FDMA2_INT_CLR_REG,
+	 .fdma_int_mask= 	  FDMA2_INT_MASK_REG,
+	 .fdma_sync_reg= 	  FDMA2_SYNCREG,
+	 .fdma_dmem_region =  	  STB7100_DMEM_OFFSET,
+	 .fdma_imem_region =  	  STB7100_IMEM_OFFSET,
+};
+
+static fdma_regs_t stb7109_fdma_regs = {
+	.fdma_id= FDMA2_ID,
+	.fdma_ver = FDAM2_VER,
+	.fdma_en = FDMA2_ENABLE_REG,
+	.fdma_clk_gate = FDMA2_CLOCKGATE,
+	.fdma_rev_id = FDMA2_REV_ID,
+	.fdma_cmd_statn = STB7109_FDMA_CMD_STATn_REG,
+	.fdma_ptrn = STB7109_FDMA_PTR_REG,
+	.fdma_cntn = STB7109_FDMA_COUNT_REG,
+	.fdma_saddrn = STB7109_FDMA_SADDR_REG,
+	.fdma_daddrn = STB7109_FDMA_DADDR_REG,
+	.fdma_req_ctln = STB7109_FDMA_REQ_CTLn_REG,
+	.fdma_cmd_sta = FDMA2_CMD_MBOX_STAT_REG,
+	.fdma_cmd_set = FDMA2_CMD_MBOX_SET_REG,
+	.fdma_cmd_clr = FDMA2_CMD_MBOX_CLR_REG,
+	.fdma_cmd_mask = FDMA2_CMD_MBOX_MASK_REG,
+	.fdma_int_sta = FDMA2_INT_STAT_REG,
+	.fdma_int_set = FDMA2_INT_SET_REG,
+	.fdma_int_clr= FDMA2_INT_CLR_REG,
+	.fdma_int_mask= FDMA2_INT_MASK_REG,
+	.fdma_sync_reg= FDMA2_SYNCREG,
+	.fdma_dmem_region = STB7109_DMEM_OFFSET,
+	.fdma_imem_region = STB7109_IMEM_OFFSET,
+};
+
+static struct fdma_platform_device_data stb7109_C1_fdma_plat_data ={
+	.cpu_subtype = 7109,
+	.cpu_rev = 1,
+};
+
+
+static struct fdma_platform_device_data stb7109_C2_fdma_plat_data = {
+	.req_line_tbl_adr = (void*)&stb7109_fdma_req_config,
+	.registers_ptr =(void*) &stb7109_fdma_regs,
+	.cpu_subtype = 7109,
+	.cpu_rev = 2,
+	.min_ch_num = CONFIG_MIN_STM_DMA_CHANNEL_NR,
+	.max_ch_num  =CONFIG_MAX_STM_DMA_CHANNEL_NR,
+	.fdma_base  = STB7109_FDMA_BASE,
+	.irq_vect = LINUX_FDMA_STB7109_IRQ_VECT,
+	.fw_device_name = "STB7109_fdma_fw",
+	.nr_reqlines = (sizeof(stb7109_fdma_req_config) / sizeof(fdmareq_RequestConfig_t)),
+	.fw.data_reg = (unsigned long*)&STB7109_C2_DMEM_REGION,
+	.fw.imem_reg = (unsigned long*)&STB7109_C2_IMEM_REGION,
+	.fw.imem_fw_sz = STB7109_C2_IMEM_FIRMWARE_SZ,
+	.fw.dmem_fw_sz = STB7109_C2_DMEM_FIRMWARE_SZ,
+	.fw.dmem_len = STB7109_C2_DMEM_REGION_LENGTH,
+	.fw.imem_len = STB7109_C2_IMEM_REGION_LENGTH
+};
+
+static struct fdma_platform_device_data stb7109_C3_fdma_plat_data = {
+	.req_line_tbl_adr = (void*)&stb7109_fdma_req_config,
+	.registers_ptr =(void*) &stb7109_fdma_regs,
+	.cpu_subtype = 7109,
+	.cpu_rev = 3,
+	.min_ch_num = CONFIG_MIN_STM_DMA_CHANNEL_NR,
+	.max_ch_num  =CONFIG_MAX_STM_DMA_CHANNEL_NR,
+	.fdma_base  = STB7109_FDMA_BASE,
+	.irq_vect = LINUX_FDMA_STB7109_IRQ_VECT,
+	.fw_device_name = "STB7109_C3_fdma_fw",
+	.nr_reqlines = (sizeof(stb7109_fdma_req_config) / sizeof(fdmareq_RequestConfig_t)),
+	.fw.data_reg = (unsigned long*)&STB7109_C3_DMEM_REGION,
+	.fw.imem_reg = (unsigned long*)&STB7109_C3_IMEM_REGION,
+	.fw.imem_fw_sz = STB7109_C3_IMEM_FIRMWARE_SZ,
+	.fw.dmem_fw_sz = STB7109_C3_DMEM_FIRMWARE_SZ,
+	.fw.dmem_len = STB7109_C3_DMEM_REGION_LENGTH,
+	.fw.imem_len = STB7109_C3_IMEM_REGION_LENGTH
+
+};
+
+static struct fdma_platform_device_data stb7100_Cx_fdma_plat_data = {
+	.req_line_tbl_adr = (void*)&stb7100_fdma_req_config,
+	.registers_ptr =(void*) &stb7100_fdma_regs,
+	.cpu_subtype = 7100,
+/*	.cpu_rev = ! defined at runtime */
+	.min_ch_num = CONFIG_MIN_STM_DMA_CHANNEL_NR,
+	.max_ch_num  =CONFIG_MAX_STM_DMA_CHANNEL_NR,
+	.fdma_base  = STB7100_FDMA_BASE,
+	.irq_vect = LINUX_FDMA_STB7100_IRQ_VECT,
+	.fw_device_name = "STB7100_Cx_fdma_fw",
+	.nr_reqlines = (sizeof(stb7100_fdma_req_config) / sizeof(fdmareq_RequestConfig_t)),
+	.fw.data_reg = (unsigned long*)&STB7100_DMEM_REGION,
+	.fw.imem_reg = (unsigned long*)&STB7100_IMEM_REGION,
+	.fw.imem_fw_sz = STB7100_IMEM_FIRMWARE_SZ,
+	.fw.dmem_fw_sz = STB7100_DMEM_FIRMWARE_SZ,
+	.fw.dmem_len = STB7100_DMEM_REGION_LENGTH,
+	.fw.imem_len = STB7100_IMEM_REGION_LENGTH
+};
+
+
+static struct platform_device fdma_710x_device = {
+        .name           = "710x_FDMA",
+        .id             = -1,
+};
+
+
+static struct resource alsa_710x_resource_pcm0[3] = {
+
+	[0] = {/* allocatable channels*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags 	= IORESOURCE_IRQ
+	},
+	[1]= {/*fdma reqline*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ
+	},
+	[2] = {/*rising or falling edge I2s clocking
+		1 == FALLING_EDGE
+		0 == RISING EDGE */
+		 /*.start = runtime dependant*/
+		 /*.end = runtime dependant*/
+		.flags = IORESOURCE_IRQ
+	}};
+
+
+static struct resource alsa_710x_resource_pcm1[3] = {
+
+	[0] = {/* allocatable channels*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags 	= IORESOURCE_IRQ,
+	},
+	[1]= {/*fdma reqline*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ,
+	},
+	[2] = {/*rising or falling edge I2s clocking
+		1 == FALLING_EDGE
+		0 == RISING EDGE */
+		 /*.start = runtime dependant*/
+		 /*.end = runtime dependant*/
+		.flags = IORESOURCE_IRQ
+	}};
+
+static struct resource alsa_710x_resource_spdif[2] = {
+
+	[0] = {/*min allocatable channels*/
+		.start = 2,
+		.end   =2,
+		.flags = IORESOURCE_IRQ
+	},
+	[1] = {/*fdma reqline*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ
+	}};
+
+
+static struct resource alsa_710x_resource_cnv[2] = {
+
+	[0] = {/*min allocatable channels*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ,
+	},
+	[1] = {/*fdma reqline*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ,
+	}};
+
+static struct resource alsa_710x_resource_pcmin[3] = {
+
+	[0] = {/*min allocatable channels*/
+		.start = 0,
+		.end   = 0,
+		.flags = IORESOURCE_IRQ,
+	},
+	[1] = {/*fdma reqline*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ,
+	},
+	[2] = {/*fdma reqline*/
+		/*.start = runtime dependant*/
+		/*.end   = runtime dependant*/
+		.flags = IORESOURCE_IRQ,
+	}};
+
+
+static struct platform_device alsa_710x_device_pcmin = {
+	.name			= "710x_ALSA_PCMIN",
+	.id 			= -1,
+	.num_resources	= 	ARRAY_SIZE(alsa_710x_resource_pcmin),
+	.resource		= alsa_710x_resource_pcmin,
+};
+
+
+static struct platform_device alsa_710x_device_pcm0 = {
+	.name			= "710x_ALSA_PCM0",
+	.id 			= -1,
+	.num_resources	= 	ARRAY_SIZE(alsa_710x_resource_pcm0),
+	.resource		= alsa_710x_resource_pcm0,
+};
+
+
+static struct platform_device alsa_710x_device_pcm1 = {
+	.name			= "710x_ALSA_PCM1",
+	.id 			= -1,
+	.num_resources	= 	ARRAY_SIZE(alsa_710x_resource_pcm1),
+	.resource		= alsa_710x_resource_pcm1,
+};
+
+static struct platform_device alsa_710x_device_spdif = {
+	.name			= "710x_ALSA_SPD",
+	.id 			= -1,
+	.num_resources	= 	ARRAY_SIZE(alsa_710x_resource_spdif),
+	.resource		= alsa_710x_resource_spdif,
+};
+
+static struct platform_device alsa_710x_device_cnv = {
+	.name			= "710x_ALSA_CNV",
+	.id 			= -1,
+	.num_resources	= 	ARRAY_SIZE(alsa_710x_resource_cnv),
+	.resource		= alsa_710x_resource_cnv,
+};
+#endif
+
+static struct platform_device boxtype_device = { 
+	.name = "boxtype", 
+	.dev.platform_data = (void*)100 
+}; 
+
+static struct platform_device *stb7100ref_devices[] __initdata = {
+//	&smc91x_device,
+	&boxtype_device,
+	&stb7109eth_device,
+	&pdiusbd12_device,
+	&st40_ohci_devices,
+	&st40_ehci_devices,
+//	&lirc_device,
+	&sata_device,
+//	&wdt_device,
+#if defined(CONFIG_STM_SSC)
+	&ssc_device,
+#endif
+//	&rtc_device,
+//	&stm_pwm_device,
+//	&physmap_flash,
+//#if FDMA
+	&fdma_710x_device,
+	&alsa_710x_device_pcm0,
+	&alsa_710x_device_pcm1,
+ 	&alsa_710x_device_spdif,
+	&alsa_710x_device_cnv,
+	&alsa_710x_device_pcmin,
+//#endif
+};
+
+static int __init device_init(void)
+{
+	int ret =0;
+	unsigned long devid;
+	unsigned long chip_revision, chip_7109;
+
+	devid = ctrl_inl(SYSCONF_DEVICEID);
+	chip_7109 = (((devid >> 12) & 0x3ff) == 0x02c);
+	chip_revision = (devid >> 28) + 1;
+
+	if ((! chip_7109) && (chip_revision == 1)) {
+		/* 7100 cut 1.x */
+		sata_private_info.phy_init = 0x0013704A;
+	} else {
+		/* 7100 cut 2.x and cut 3.x and 7109 */
+		sata_private_info.phy_init = 0x388fc;
+	}
+
+	if ((! chip_7109) || (chip_7109 && (chip_revision == 1))) {
+		sata_private_info.only_32bit = 1;
+		sata_private_info.pc_glue_logic_init = 0x1ff;
+	} else {
+		sata_private_info.only_32bit = 0;
+		sata_private_info.pc_glue_logic_init = 0x100ff;
+	}
+
+	/* Configure the ethernet MAC PBL depending on the cut of the chip */
+	if (chip_7109){
+		eth7109_private_data.pbl = 1;
+	}
+#if FDMA
+	if(chip_7109){
+		switch (chip_revision) {
+		case 1:
+			fdma_710x_device.dev.platform_data =(void*) &stb7109_C1_fdma_plat_data;
+			alsa_710x_resource_pcm0[2].start =0;
+			alsa_710x_resource_pcm0[2].end = 0;
+
+			alsa_710x_resource_pcm1[2].start =0;
+			alsa_710x_resource_pcm1[2].end = 0;
+
+			alsa_710x_resource_pcmin[2].start = 1;
+			alsa_710x_resource_pcmin[2].end =   1;
+			break;
+		case 2:
+			alsa_710x_resource_pcm0[2].start =0;
+			alsa_710x_resource_pcm0[2].end = 0;
+
+			alsa_710x_resource_pcm1[2].start =0;
+			alsa_710x_resource_pcm1[2].end = 0;
+
+			alsa_710x_resource_pcmin[2].start = 0;
+			alsa_710x_resource_pcmin[2].end =   0;
+
+			fdma_710x_device.dev.platform_data =(void*) &stb7109_C2_fdma_plat_data;
+			break;
+		default:
+			/* 7109 cut >= 3.0 */
+			BUG_ON(chip_revision < 2);
+			alsa_710x_resource_pcm0[2].start =1;
+			alsa_710x_resource_pcm0[2].end = 1;
+
+			alsa_710x_resource_pcm1[2].start =1;
+			alsa_710x_resource_pcm1[2].end = 1;
+
+			alsa_710x_resource_pcmin[2].start = 0;
+			alsa_710x_resource_pcmin[2].end =   0;
+
+			fdma_710x_device.dev.platform_data =(void*) &stb7109_C3_fdma_plat_data;
+			break;
+		}
+
+		alsa_710x_resource_pcm0[0].start = 2;
+		alsa_710x_resource_pcm0[0].end = 10;
+
+		alsa_710x_resource_pcm1[0].start = 2;
+		alsa_710x_resource_pcm1[0].end 	= 2;
+
+		alsa_710x_resource_pcm0[1].start = STB7109_FDMA_REQ_PCM_0;
+		alsa_710x_resource_pcm0[1].end = STB7109_FDMA_REQ_PCM_0;
+
+		alsa_710x_resource_pcm1[1].start = STB7109_FDMA_REQ_PCM_1;
+		alsa_710x_resource_pcm1[1].end = STB7109_FDMA_REQ_PCM_1;
+
+		alsa_710x_resource_spdif[1].start = STB7109_FDMA_REQ_SPDIF;
+		alsa_710x_resource_spdif[1].end =   STB7109_FDMA_REQ_SPDIF;
+
+		alsa_710x_resource_cnv[0].start =2;
+		alsa_710x_resource_cnv[0].end = 10;
+		alsa_710x_resource_cnv[1].start = STB7109_FDMA_REQ_PCM_0;
+		alsa_710x_resource_cnv[1].end = STB7109_FDMA_REQ_PCM_0;
+
+		alsa_710x_resource_pcmin[1].start = STB7109_FDMA_REQ_PCM_READ;
+		alsa_710x_resource_pcmin[1].end =   STB7109_FDMA_REQ_PCM_READ;
+	}
+	else {
+		stb7100_Cx_fdma_plat_data.cpu_rev = chip_revision;
+		fdma_710x_device.dev.platform_data =(void*) &stb7100_Cx_fdma_plat_data;
+
+		if(chip_revision >=3){
+			alsa_710x_resource_pcm0[0].start = 2;
+			alsa_710x_resource_pcm0[0].end = 10;
+			alsa_710x_resource_pcm1[0].start = 2;
+			alsa_710x_resource_pcm1[0].end 	= 2;
+			alsa_710x_resource_cnv[0].start =2;
+			alsa_710x_resource_cnv[0].end = 10;
+		}
+		else {
+			alsa_710x_resource_pcm0[0].start = 10;
+			alsa_710x_resource_pcm0[0].end = 10;
+			alsa_710x_resource_pcm1[0].start = 10;
+			alsa_710x_resource_pcm1[0].end 	= 10;
+			alsa_710x_resource_cnv[0].start =10;
+			alsa_710x_resource_cnv[0].end = 10;
+		}
+
+		alsa_710x_resource_pcm0[1].start = STB7100_FDMA_REQ_PCM_0;
+		alsa_710x_resource_pcm0[1].end = STB7100_FDMA_REQ_PCM_0;
+
+		alsa_710x_resource_pcm1[1].start = STB7100_FDMA_REQ_PCM_1;
+		alsa_710x_resource_pcm1[1].end = STB7100_FDMA_REQ_PCM_1;
+
+		alsa_710x_resource_spdif[1].start =  STB7100_FDMA_REQ_SPDIF;
+		alsa_710x_resource_spdif[1].end =  STB7100_FDMA_REQ_SPDIF;
+
+		alsa_710x_resource_cnv[1].start = STB7100_FDMA_REQ_PCM_0;
+		alsa_710x_resource_cnv[1].end = STB7100_FDMA_REQ_PCM_0;
+
+		alsa_710x_resource_pcm0[2].start =0;
+		alsa_710x_resource_pcm0[2].end = 0;
+
+		alsa_710x_resource_pcm1[2].start =0;
+		alsa_710x_resource_pcm1[2].end = 0;
+
+		alsa_710x_resource_pcmin[1].start = STB7100_FDMA_REQ_PCM_READ;
+		alsa_710x_resource_pcmin[1].end =   STB7100_FDMA_REQ_PCM_READ;
+		alsa_710x_resource_pcmin[2].start = 0;
+		alsa_710x_resource_pcmin[2].end =   0;
+
+	}
+#else
+	fdma_setup(chip_7109, chip_revision);
+	alsa_setup(chip_7109, chip_revision);
+#endif
+	ret = platform_add_devices(stb7100ref_devices, ARRAY_SIZE(stb7100ref_devices));
+	return ret;
+}
+
+subsys_initcall(device_init);
diff -urN linux-2.6.17.14/arch/sh/configs/cuberevo-mini-fta_defconfig linux-dgs/arch/sh/configs/cuberevo-mini-fta_defconfig
--- linux-2.6.17.14/arch/sh/configs/cuberevo-mini-fta_defconfig	1970-01-01 09:00:00.000000000 +0900
+++ linux-dgs/arch/sh/configs/cuberevo-mini-fta_defconfig	2009-01-14 15:57:27.000000000 +0900
@@ -0,0 +1,1296 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.17.14
+# Thu Nov 27 13:36:15 2008
+#
+CONFIG_SUPERH=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_GENERIC_FIND_NEXT_BIT=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+
+#
+# Code maturity level options
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_BROKEN_ON_SMP=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+
+#
+# General setup
+#
+CONFIG_LOCALVERSION="-cuberevo-mini-fta"
+# CONFIG_LOCALVERSION_AUTO is not set
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_POSIX_MQUEUE=y
+# CONFIG_BSD_PROCESS_ACCT is not set
+CONFIG_SYSCTL=y
+# CONFIG_AUDIT is not set
+# CONFIG_IKCONFIG is not set
+# CONFIG_RELAY is not set
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_UID16=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_EMBEDDED=y
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_EXTRA_PASS is not set
+# CONFIG_HOTPLUG is not set
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SHMEM=y
+CONFIG_SLAB=y
+# CONFIG_TINY_SHMEM is not set
+CONFIG_BASE_SMALL=0
+# CONFIG_SLOB is not set
+CONFIG_OBSOLETE_INTERMODULE=y
+
+#
+# Loadable module support
+#
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+# CONFIG_MODVERSIONS is not set
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_KMOD=y
+
+#
+# Block layer
+#
+# CONFIG_LBD is not set
+# CONFIG_BLK_DEV_IO_TRACE is not set
+# CONFIG_LSF is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_AS=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+CONFIG_DEFAULT_AS=y
+# CONFIG_DEFAULT_DEADLINE is not set
+# CONFIG_DEFAULT_CFQ is not set
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="anticipatory"
+
+#
+# System type
+#
+# CONFIG_SH_SOLUTION_ENGINE is not set
+# CONFIG_SH_7751_SOLUTION_ENGINE is not set
+# CONFIG_SH_7300_SOLUTION_ENGINE is not set
+# CONFIG_SH_73180_SOLUTION_ENGINE is not set
+# CONFIG_SH_7751_SYSTEMH is not set
+# CONFIG_SH_STB1_HARP is not set
+# CONFIG_SH_STB1_OVERDRIVE is not set
+# CONFIG_SH_ST40RA_EVAL is not set
+# CONFIG_SH_ST40RA_STARTER is not set
+# CONFIG_SH_ST40GX1_EVAL is not set
+# CONFIG_SH_MEDIAREF_DEMO is not set
+# CONFIG_SH_MEDIAX_DEMO is not set
+# CONFIG_SH_STI5528_EVAL is not set
+# CONFIG_SH_STI5528_ESPRESSO is not set
+# CONFIG_SH_STM8000_DEMO is not set
+# CONFIG_SH_ST220_EVAL is not set
+# CONFIG_SH_STB7100_MBOARD is not set
+# CONFIG_SH_STB7100_REF is not set
+# CONFIG_SH_RELOOK511 is not set
+# CONFIG_SH_CUBEREVO_MINI is not set
+CONFIG_SH_CUBEREVO_MINI_FTA=y
+# CONFIG_SH_CUBEREVO_250HD is not set
+# CONFIG_SH_STB7109E_REF is not set
+# CONFIG_SH_HP6XX is not set
+# CONFIG_SH_CQREEK is not set
+# CONFIG_SH_DMIDA is not set
+# CONFIG_SH_EC3104 is not set
+# CONFIG_SH_SATURN is not set
+# CONFIG_SH_DREAMCAST is not set
+# CONFIG_SH_CAT68701 is not set
+# CONFIG_SH_BIGSUR is not set
+# CONFIG_SH_SH2000 is not set
+# CONFIG_SH_ADX is not set
+# CONFIG_SH_MPC1211 is not set
+# CONFIG_SH_SH03 is not set
+# CONFIG_SH_SECUREEDGE5410 is not set
+# CONFIG_SH_HS7751RVOIP is not set
+# CONFIG_SH_RTS7751R2D is not set
+# CONFIG_SH_R7780RP is not set
+# CONFIG_SH_EDOSK7705 is not set
+# CONFIG_SH_SH4202_MICRODEV is not set
+# CONFIG_SH_LANDISK is not set
+# CONFIG_SH_TITAN is not set
+# CONFIG_SH_UNKNOWN is not set
+
+#
+# Processor selection
+#
+CONFIG_CPU_SH4=y
+CONFIG_CPU_SUBTYPE_ST40=y
+
+#
+# SH-2 Processor Support
+#
+# CONFIG_CPU_SUBTYPE_SH7604 is not set
+
+#
+# SH-3 Processor Support
+#
+# CONFIG_CPU_SUBTYPE_SH7300 is not set
+# CONFIG_CPU_SUBTYPE_SH7705 is not set
+# CONFIG_CPU_SUBTYPE_SH7707 is not set
+# CONFIG_CPU_SUBTYPE_SH7708 is not set
+# CONFIG_CPU_SUBTYPE_SH7709 is not set
+
+#
+# SH-4 Processor Support
+#
+# CONFIG_CPU_SUBTYPE_SH7750 is not set
+# CONFIG_CPU_SUBTYPE_SH7091 is not set
+# CONFIG_CPU_SUBTYPE_SH7750R is not set
+# CONFIG_CPU_SUBTYPE_SH7750S is not set
+# CONFIG_CPU_SUBTYPE_SH7751 is not set
+# CONFIG_CPU_SUBTYPE_SH7751R is not set
+# CONFIG_CPU_SUBTYPE_SH7760 is not set
+# CONFIG_CPU_SUBTYPE_SH4_202 is not set
+
+#
+# ST40 Processor Support
+#
+# CONFIG_CPU_SUBTYPE_ST40STB1 is not set
+# CONFIG_CPU_SUBTYPE_ST40GX1 is not set
+# CONFIG_CPU_SUBTYPE_STI5528 is not set
+# CONFIG_CPU_SUBTYPE_STM8000 is not set
+CONFIG_CPU_SUBTYPE_STB7100=y
+
+#
+# SH-4A Processor Support
+#
+# CONFIG_CPU_SUBTYPE_SH73180 is not set
+# CONFIG_CPU_SUBTYPE_SH7770 is not set
+# CONFIG_CPU_SUBTYPE_SH7780 is not set
+
+#
+# Memory management options
+#
+CONFIG_MMU=y
+CONFIG_PAGE_OFFSET=0x80000000
+CONFIG_MEMORY_START=0x04400000
+CONFIG_MEMORY_SIZE=0x04B00000
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+# CONFIG_SPARSEMEM_STATIC is not set
+CONFIG_SPLIT_PTLOCK_CPUS=4
+
+#
+# Cache configuration
+#
+# CONFIG_SH_DIRECT_MAPPED is not set
+# CONFIG_SH_WRITETHROUGH is not set
+# CONFIG_SH_OCRAM is not set
+CONFIG_BIGPHYS_AREA=y
+
+#
+# STMicroelectronics Advanced Features
+#
+# CONFIG_STM_GRB is not set
+
+#
+# Processor features
+#
+CONFIG_CPU_LITTLE_ENDIAN=y
+CONFIG_SH_RTC_ST=y
+CONFIG_SH_FPU=y
+# CONFIG_SH_STORE_QUEUES is not set
+CONFIG_CPU_HAS_INTEVT=y
+CONFIG_CPU_HAS_INTC2_IRQ=y
+CONFIG_CPU_HAS_SR_RB=y
+
+#
+# Timer support
+#
+CONFIG_SH_TMU=y
+CONFIG_SH_PCLK_FREQ=66000000
+CONFIG_SH_EXTERNAL_CLOCK=27000000
+CONFIG_SH_FAST_HZ=y
+
+#
+# CPU Frequency scaling
+#
+# CONFIG_CPU_FREQ is not set
+
+#
+# DMA support
+#
+# CONFIG_SH_DMA_ISA is not set
+
+#
+# Companion Chips
+#
+# CONFIG_HD6446X_SERIES is not set
+
+#
+# Kernel features
+#
+# CONFIG_KEXEC is not set
+CONFIG_PREEMPT=y
+# CONFIG_SMP is not set
+
+#
+# Boot options
+#
+CONFIG_ZERO_PAGE_OFFSET=0x00001000
+# CONFIG_ZIMAGE_ROM is not set
+CONFIG_BOOT_LINK_OFFSET=0x00800000
+# CONFIG_UBC_WAKEUP is not set
+# CONFIG_CMDLINE_BOOL is not set
+
+#
+# Bus options
+#
+# CONFIG_PCI is not set
+
+#
+# PCCARD (PCMCIA/CardBus) support
+#
+# CONFIG_PCCARD is not set
+
+#
+# PCI Hotplug Support
+#
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+# CONFIG_BINFMT_FLAT is not set
+# CONFIG_BINFMT_MISC is not set
+
+#
+# Power management options (EXPERIMENTAL)
+#
+# CONFIG_PM is not set
+# CONFIG_PM_SH3_FRQCR is not set
+
+#
+# Networking
+#
+CONFIG_NET=y
+
+#
+# Networking options
+#
+# CONFIG_NETDEBUG is not set
+CONFIG_PACKET=y
+# CONFIG_PACKET_MMAP is not set
+CONFIG_UNIX=y
+# CONFIG_NET_KEY is not set
+CONFIG_INET=y
+# CONFIG_IP_MULTICAST is not set
+# CONFIG_IP_ADVANCED_ROUTER is not set
+CONFIG_IP_FIB_HASH=y
+CONFIG_IP_PNP=y
+# CONFIG_IP_PNP_DHCP is not set
+# CONFIG_IP_PNP_BOOTP is not set
+# CONFIG_IP_PNP_RARP is not set
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_INET_AH is not set
+# CONFIG_INET_ESP is not set
+# CONFIG_INET_IPCOMP is not set
+# CONFIG_INET_XFRM_TUNNEL is not set
+# CONFIG_INET_TUNNEL is not set
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_BIC=y
+
+#
+# IP: Virtual Server Configuration
+#
+# CONFIG_IP_VS is not set
+# CONFIG_IPV6 is not set
+# CONFIG_INET6_XFRM_TUNNEL is not set
+# CONFIG_INET6_TUNNEL is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+
+#
+# Core Netfilter Configuration
+#
+# CONFIG_NETFILTER_NETLINK is not set
+# CONFIG_NF_CONNTRACK is not set
+# CONFIG_NETFILTER_XTABLES is not set
+
+#
+# IP: Netfilter Configuration
+#
+# CONFIG_IP_NF_CONNTRACK is not set
+# CONFIG_IP_NF_QUEUE is not set
+
+#
+# DCCP Configuration (EXPERIMENTAL)
+#
+# CONFIG_IP_DCCP is not set
+
+#
+# SCTP Configuration (EXPERIMENTAL)
+#
+# CONFIG_IP_SCTP is not set
+
+#
+# TIPC Configuration (EXPERIMENTAL)
+#
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+# CONFIG_BRIDGE is not set
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_NET_DIVERT is not set
+# CONFIG_ECONET is not set
+# CONFIG_WAN_ROUTER is not set
+
+#
+# QoS and/or fair queueing
+#
+# CONFIG_NET_SCHED is not set
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_HAMRADIO is not set
+# CONFIG_IRDA is not set
+# CONFIG_BT is not set
+# CONFIG_IEEE80211 is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+# CONFIG_FW_LOADER is not set
+
+#
+# Connector - unified userspace <-> kernelspace linker
+#
+# CONFIG_CONNECTOR is not set
+
+#
+# Memory Technology Devices (MTD)
+#
+CONFIG_MTD=y
+# CONFIG_MTD_DEBUG is not set
+# CONFIG_MTD_CONCAT is not set
+CONFIG_MTD_PARTITIONS=y
+# CONFIG_MTD_REDBOOT_PARTS is not set
+CONFIG_MTD_CMDLINE_PARTS=y
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=y
+CONFIG_MTD_BLOCK=y
+# CONFIG_FTL is not set
+# CONFIG_NFTL is not set
+# CONFIG_INFTL is not set
+# CONFIG_RFD_FTL is not set
+
+#
+# RAM/ROM/Flash chip drivers
+#
+CONFIG_MTD_CFI=y
+# CONFIG_MTD_JEDECPROBE is not set
+CONFIG_MTD_GEN_PROBE=y
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+CONFIG_MTD_CFI_INTELEXT=y
+CONFIG_MTD_CFI_AMDSTD=y
+# CONFIG_MTD_CFI_STAA is not set
+CONFIG_MTD_CFI_UTIL=y
+# CONFIG_MTD_RAM is not set
+# CONFIG_MTD_ROM is not set
+# CONFIG_MTD_ABSENT is not set
+# CONFIG_MTD_OBSOLETE_CHIPS is not set
+
+#
+# Mapping drivers for chip access
+#
+# CONFIG_MTD_COMPLEX_MAPPINGS is not set
+# CONFIG_MTD_PHYSMAP is not set
+# CONFIG_MTD_SOLUTIONENGINE is not set
+# CONFIG_MTD_PLATRAM is not set
+# CONFIG_MTD_STBOARDS is not set
+# CONFIG_MTD_RELOOK511 is not set
+# CONFIG_MTD_CUBEREVO_MINI is not set
+CONFIG_MTD_CUBEREVO_MINI_FTA=y
+# CONFIG_MTD_CUBEREVO_250HD is not set
+
+#
+# Self-contained MTD device drivers
+#
+# CONFIG_MTD_SLRAM is not set
+# CONFIG_MTD_PHRAM is not set
+# CONFIG_MTD_MTDRAM is not set
+# CONFIG_MTD_BLOCK2MTD is not set
+
+#
+# Disk-On-Chip Device Drivers
+#
+# CONFIG_MTD_DOC2000 is not set
+# CONFIG_MTD_DOC2001 is not set
+# CONFIG_MTD_DOC2001PLUS is not set
+
+#
+# NAND Flash Device Drivers
+#
+# CONFIG_MTD_NAND is not set
+
+#
+# OneNAND Flash Device Drivers
+#
+# CONFIG_MTD_ONENAND is not set
+
+#
+# Parallel port support
+#
+# CONFIG_PARPORT is not set
+
+#
+# Plug and Play support
+#
+
+#
+# Block devices
+#
+# CONFIG_BLK_DEV_COW_COMMON is not set
+# CONFIG_BLK_DEV_LOOP is not set
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=4096
+CONFIG_BLK_DEV_INITRD=y
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+
+#
+# ATA/ATAPI/MFM/RLL support
+#
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+# CONFIG_RAID_ATTRS is not set
+CONFIG_SCSI=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+# CONFIG_BLK_DEV_SR is not set
+# CONFIG_CHR_DEV_SG is not set
+# CONFIG_CHR_DEV_SCH is not set
+
+#
+# Some SCSI devices (e.g. CD jukebox) support multiple LUNs
+#
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+
+#
+# SCSI Transport Attributes
+#
+# CONFIG_SCSI_SPI_ATTRS is not set
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+
+#
+# SCSI low-level drivers
+#
+# CONFIG_ISCSI_TCP is not set
+CONFIG_SCSI_SATA=y
+CONFIG_SCSI_SATA_STM=y
+# CONFIG_SCSI_DEBUG is not set
+
+#
+# Multi-device support (RAID and LVM)
+#
+# CONFIG_MD is not set
+
+#
+# Fusion MPT device support
+#
+# CONFIG_FUSION is not set
+
+#
+# IEEE 1394 (FireWire) support
+#
+
+#
+# I2O device support
+#
+
+#
+# Network device support
+#
+CONFIG_NETDEVICES=y
+# CONFIG_DUMMY is not set
+# CONFIG_BONDING is not set
+# CONFIG_EQUALIZER is not set
+# CONFIG_TUN is not set
+CONFIG_NWHW_CONFIG=y
+
+#
+# PHY device support
+#
+CONFIG_PHYLIB=y
+
+#
+# PHY device drivers
+#
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_STE10XP is not set
+CONFIG_RTL8201=y
+# CONFIG_LAN8700 is not set
+
+#
+# Ethernet (10 or 100Mbit)
+#
+CONFIG_NET_ETHERNET=y
+CONFIG_MII=y
+# CONFIG_STNIC is not set
+# CONFIG_SMC91X is not set
+# CONFIG_SMSC911x is not set
+# CONFIG_NE2000 is not set
+CONFIG_STMMAC_ETH=y
+CONFIG_DMA_RX_SIZE=256
+CONFIG_DMA_TX_SIZE=256
+CONFIG_PHY_MII=y
+# CONFIG_PHY_RMII is not set
+
+#
+# Ethernet (1000 Mbit)
+#
+
+#
+# Ethernet (10000 Mbit)
+#
+
+#
+# Token Ring devices
+#
+
+#
+# Wireless LAN (non-hamradio)
+#
+# CONFIG_NET_RADIO is not set
+
+#
+# Wan interfaces
+#
+# CONFIG_WAN is not set
+# CONFIG_PPP is not set
+# CONFIG_SLIP is not set
+# CONFIG_SHAPER is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+
+#
+# ISDN subsystem
+#
+# CONFIG_ISDN is not set
+
+#
+# Telephony Support
+#
+# CONFIG_PHONE is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_TSDEV is not set
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+# CONFIG_INPUT_KEYBOARD is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+# CONFIG_SERIO_I8042 is not set
+CONFIG_SERIO_SERPORT=y
+# CONFIG_SERIO_LIBPS2 is not set
+# CONFIG_SERIO_RAW is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+# CONFIG_VT is not set
+# CONFIG_SERIAL_NONSTANDARD is not set
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_SH_SCI is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+CONFIG_SERIAL_ST_ASC=y
+CONFIG_SERIAL_ST_ASC_CONSOLE=y
+CONFIG_UNIX98_PTYS=y
+# CONFIG_LEGACY_PTYS is not set
+
+#
+# Linux InfraRed Controller
+#
+# CONFIG_LIRC_SUPPORT is not set
+
+#
+# IPMI
+#
+# CONFIG_IPMI_HANDLER is not set
+
+#
+# Watchdog Cards
+#
+# CONFIG_WATCHDOG is not set
+# CONFIG_RTC is not set
+# CONFIG_GEN_RTC is not set
+# CONFIG_DTLK is not set
+# CONFIG_R3964 is not set
+
+#
+# Ftape, the floppy tape device driver
+#
+CONFIG_ST_PIO=y
+# CONFIG_STM_RTC is not set
+# CONFIG_RAW_DRIVER is not set
+
+#
+# TPM devices
+#
+# CONFIG_TCG_TPM is not set
+# CONFIG_TELCLOCK is not set
+
+#
+# I2C support
+#
+CONFIG_I2C=y
+CONFIG_I2C_CHARDEV=y
+
+#
+# I2C Algorithms
+#
+CONFIG_I2C_ALGOBIT=y
+# CONFIG_I2C_ALGOPCF is not set
+# CONFIG_I2C_ALGOPCA is not set
+
+#
+# I2C Hardware Bus support
+#
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_PCA_ISA is not set
+CONFIG_I2C_ST40_PIO=y
+# CONFIG_I2C_STM is not set
+CONFIG_I2C_STM_NOSTOP_API=y
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+
+#
+# Miscellaneous I2C Chip support
+#
+# CONFIG_SENSORS_DS1337 is not set
+# CONFIG_SENSORS_DS1374 is not set
+# CONFIG_I2C_AT24C is not set
+# CONFIG_SENSORS_EEPROM is not set
+# CONFIG_SENSORS_PCF8574 is not set
+# CONFIG_SENSORS_PCA9539 is not set
+# CONFIG_SENSORS_PCF8591 is not set
+# CONFIG_SENSORS_MAX6875 is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_CHIP is not set
+
+#
+# SPI support
+#
+# CONFIG_SPI is not set
+# CONFIG_SPI_MASTER is not set
+
+#
+# Dallas's 1-wire bus
+#
+# CONFIG_W1 is not set
+
+#
+# Hardware Monitoring support
+#
+# CONFIG_HWMON is not set
+# CONFIG_HWMON_VID is not set
+
+#
+# Misc devices
+#
+
+#
+# Multimedia devices
+#
+# CONFIG_VIDEO_DEV is not set
+CONFIG_VIDEO_V4L2=y
+
+#
+# Digital Video Broadcasting Devices
+#
+CONFIG_DVB=y
+CONFIG_DVB_CORE=y
+
+#
+# Supported USB Adapters
+#
+# CONFIG_DVB_USB is not set
+# CONFIG_DVB_TTUSB_BUDGET is not set
+# CONFIG_DVB_TTUSB_DEC is not set
+# CONFIG_DVB_CINERGYT2 is not set
+
+#
+# Supported FlexCopII (B2C2) Adapters
+#
+# CONFIG_DVB_B2C2_FLEXCOP is not set
+
+#
+# Supported DVB Frontends
+#
+
+#
+# Customise DVB Frontends
+#
+
+#
+# DVB-S (satellite) frontends
+#
+# CONFIG_DVB_STV0299 is not set
+# CONFIG_DVB_CX24110 is not set
+# CONFIG_DVB_CX24123 is not set
+# CONFIG_DVB_TDA8083 is not set
+# CONFIG_DVB_MT312 is not set
+# CONFIG_DVB_VES1X93 is not set
+# CONFIG_DVB_S5H1420 is not set
+
+#
+# DVB-T (terrestrial) frontends
+#
+# CONFIG_DVB_SP8870 is not set
+# CONFIG_DVB_SP887X is not set
+# CONFIG_DVB_CX22700 is not set
+# CONFIG_DVB_CX22702 is not set
+# CONFIG_DVB_L64781 is not set
+# CONFIG_DVB_TDA1004X is not set
+# CONFIG_DVB_NXT6000 is not set
+# CONFIG_DVB_MT352 is not set
+# CONFIG_DVB_ZL10353 is not set
+# CONFIG_DVB_DIB3000MB is not set
+# CONFIG_DVB_DIB3000MC is not set
+
+#
+# DVB-C (cable) frontends
+#
+# CONFIG_DVB_VES1820 is not set
+# CONFIG_DVB_TDA10021 is not set
+# CONFIG_DVB_STV0297 is not set
+
+#
+# ATSC (North American/Korean Terresterial DTV) frontends
+#
+# CONFIG_DVB_NXT200X is not set
+# CONFIG_DVB_OR51211 is not set
+# CONFIG_DVB_OR51132 is not set
+# CONFIG_DVB_BCM3510 is not set
+# CONFIG_DVB_LGDT330X is not set
+# CONFIG_USB_DABUSB is not set
+
+#
+# Graphics support
+#
+CONFIG_FB=y
+# CONFIG_FB_CFB_FILLRECT is not set
+# CONFIG_FB_CFB_COPYAREA is not set
+# CONFIG_FB_CFB_IMAGEBLIT is not set
+# CONFIG_FB_SOFTWARE_DRAWING_HELPERS is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_FIRMWARE_EDID is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+# CONFIG_FB_EPSON1355 is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_VIRTUAL is not set
+
+#
+# Logo configuration
+#
+# CONFIG_LOGO is not set
+# CONFIG_BACKLIGHT_LCD_SUPPORT is not set
+
+#
+# Sound
+#
+# CONFIG_SOUND is not set
+
+#
+# USB support
+#
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+# CONFIG_USB_BANDWIDTH is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
+# CONFIG_USB_OTG is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_EHCI_HCD=y
+# CONFIG_USB_EHCI_SPLIT_ISO is not set
+# CONFIG_USB_EHCI_ROOT_HUB_TT is not set
+# CONFIG_USB_ISP116X_HCD is not set
+CONFIG_USB_OHCI_HCD=y
+# CONFIG_USB_OHCI_BIG_ENDIAN is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_ST_SOF_WORKAROUND is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+
+#
+# NOTE: USB_STORAGE enables SCSI, and 'SCSI disk support'
+#
+
+#
+# may also be needed; see USB_STORAGE Help for more information
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_DPCM is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+CONFIG_USB_HIDINPUT=y
+# CONFIG_USB_HIDINPUT_POWERBOOK is not set
+# CONFIG_HID_FF is not set
+# CONFIG_USB_HIDDEV is not set
+# CONFIG_USB_AIPTEK is not set
+# CONFIG_USB_WACOM is not set
+# CONFIG_USB_ACECAD is not set
+# CONFIG_USB_KBTAB is not set
+# CONFIG_USB_POWERMATE is not set
+# CONFIG_USB_TOUCHSCREEN is not set
+# CONFIG_USB_YEALINK is not set
+# CONFIG_USB_XPAD is not set
+# CONFIG_USB_ATI_REMOTE is not set
+# CONFIG_USB_ATI_REMOTE2 is not set
+# CONFIG_USB_KEYSPAN_REMOTE is not set
+# CONFIG_USB_APPLETOUCH is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+CONFIG_USB_PEGASUS=y
+# CONFIG_USB_RTL8150 is not set
+CONFIG_USB_USBNET=y
+CONFIG_USB_NET_AX8817X=y
+CONFIG_USB_NET_CDCETHER=y
+# CONFIG_USB_NET_GL620A is not set
+CONFIG_USB_NET_NET1080=y
+# CONFIG_USB_NET_PLUSB is not set
+# CONFIG_USB_NET_RNDIS_HOST is not set
+# CONFIG_USB_NET_CDC_SUBSET is not set
+CONFIG_USB_NET_ZAURUS=y
+CONFIG_USB_MON=y
+
+#
+# USB port drivers
+#
+
+#
+# USB Serial Converter support
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_AUERSWALD is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_PHIDGETKIT is not set
+# CONFIG_USB_PHIDGETSERVO is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TEST is not set
+
+#
+# USB DSL modem support
+#
+
+#
+# USB Gadget Support
+#
+# CONFIG_USB_GADGET is not set
+# CONFIG_USB_GADGET_NET2280 is not set
+# CONFIG_USB_GADGET_NET2270 is not set
+# CONFIG_USB_GADGET_PXA2XX is not set
+# CONFIG_USB_GADGET_GOKU is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_PDIUSBD12 is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FILE_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+
+#
+# MMC/SD Card support
+#
+# CONFIG_MMC is not set
+
+#
+# LED devices
+#
+# CONFIG_NEW_LEDS is not set
+
+#
+# LED drivers
+#
+
+#
+# LED Triggers
+#
+
+#
+# InfiniBand support
+#
+
+#
+# EDAC - error detection and reporting (RAS) (EXPERIMENTAL)
+#
+
+#
+# Real Time Clock
+#
+# CONFIG_RTC_CLASS is not set
+CONFIG_STM_DRIVERS=y
+
+#
+# STM specific devices
+#
+# CONFIG_STM_DMA is not set
+# CONFIG_STB7100_FDMA is not set
+CONFIG_STM_COPROCESSOR=y
+# CONFIG_STM_COPROCESSOR_FRMW is not set
+# CONFIG_COPROCESSOR_DEBUG is not set
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+# CONFIG_EXT2_FS_POSIX_ACL is not set
+# CONFIG_EXT2_FS_SECURITY is not set
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_FS_XATTR=y
+# CONFIG_EXT3_FS_POSIX_ACL is not set
+# CONFIG_EXT3_FS_SECURITY is not set
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_FS_POSIX_ACL is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_MINIX_FS is not set
+CONFIG_ROMFS_FS=y
+CONFIG_INOTIFY=y
+# CONFIG_QUOTA is not set
+CONFIG_DNOTIFY=y
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_AUTOFS4_FS is not set
+# CONFIG_FUSE_FS is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+# CONFIG_ISO9660_FS is not set
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_NTFS_FS=m
+CONFIG_NTFS_RW=y 
+# CONFIG_NTFS_DEBUG is not set 
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_HUGETLBFS is not set
+# CONFIG_HUGETLB_PAGE is not set
+CONFIG_RAMFS=y
+# CONFIG_CONFIGFS_FS is not set
+
+#
+# Miscellaneous filesystems
+#
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+# CONFIG_JFFS_FS is not set
+CONFIG_JFFS2_FS=y
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+# CONFIG_JFFS2_SUMMARY is not set
+# CONFIG_JFFS2_COMPRESSION_OPTIONS is not set
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JFFS2_RTIME=y
+# CONFIG_JFFS2_RUBIN is not set
+CONFIG_CRAMFS=y
+CONFIG_SQUASHFS=y
+# CONFIG_SQUASHFS_EMBEDDED is not set
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+# CONFIG_SQUASHFS_VMALLOC is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+
+#
+# Network File Systems
+#
+CONFIG_NFS_FS=y
+# CONFIG_NFS_V3 is not set
+# CONFIG_NFS_V4 is not set
+CONFIG_NFS_DIRECTIO=y
+# CONFIG_NFSD is not set
+CONFIG_ROOT_NFS=y
+CONFIG_LOCKD=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+# CONFIG_RPCSEC_GSS_KRB5 is not set
+# CONFIG_RPCSEC_GSS_SPKM3 is not set
+# CONFIG_SMB_FS is not set
+CONFIG_CIFS=y
+# CONFIG_CIFS_STATS is not set
+# CONFIG_CIFS_XATTR is not set
+# CONFIG_CIFS_EXPERIMENTAL is not set
+# CONFIG_NCP_FS is not set
+# CONFIG_CODA_FS is not set
+# CONFIG_AFS_FS is not set
+# CONFIG_9P_FS is not set
+
+#
+# Partition Types
+#
+# CONFIG_PARTITION_ADVANCED is not set
+CONFIG_MSDOS_PARTITION=y
+
+#
+# Native Language Support
+#
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_UTF8 is not set
+
+#
+# Profiling support
+#
+# CONFIG_PROFILING is not set
+
+#
+# Kernel hacking
+#
+# CONFIG_PRINTK_TIME is not set
+# CONFIG_MAGIC_SYSRQ is not set
+# CONFIG_DEBUG_KERNEL is not set
+CONFIG_LOG_BUF_SHIFT=14
+# CONFIG_DEBUG_FS is not set
+# CONFIG_WANT_EXTRA_DEBUG_INFORMATION is not set
+# CONFIG_SH_STANDARD_BIOS is not set
+# CONFIG_EARLY_SCIF_CONSOLE is not set
+# CONFIG_4KSTACKS is not set
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY is not set
+
+#
+# Cryptographic options
+#
+# CONFIG_CRYPTO is not set
+
+#
+# Hardware crypto devices
+#
+
+#
+# Library routines
+#
+# CONFIG_CRC_CCITT is not set
+# CONFIG_CRC16 is not set
+CONFIG_CRC32=y
+# CONFIG_LIBCRC32C is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
diff -urN linux-2.6.17.14/drivers/mtd/maps/cuberevo-mini-fta.c linux-dgs/drivers/mtd/maps/cuberevo-mini-fta.c
--- linux-2.6.17.14/drivers/mtd/maps/cuberevo-mini-fta.c	1970-01-01 09:00:00.000000000 +0900
+++ linux-dgs/drivers/mtd/maps/cuberevo-mini-fta.c	2009-01-14 15:55:38.000000000 +0900
@@ -0,0 +1,297 @@
+/*
+ * $Id$
+ *
+ * Chip mappings for the cuberevo-mini-fta boards.
+ * Adapted from physmap.c
+ *
+ * 	soon@dgstation.co.kr
+ */
+
+#include <linux/module.h>
+#include <linux/types.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <asm/io.h>
+#include <asm/errno.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/partitions.h>
+
+#define	FLASH_32MB
+//#define FLASH_16MB
+
+#if defined(FLASH_32MB)
+
+// 32MB flash
+#define WINDOW_ADDR	0xA0000000
+#define WINDOW_SIZE	0x02000000
+
+#define BOOT_SIZE	0x040000	// boot loader
+#define WELCOME_SIZE	0x020000	// welcome+boot config
+#define KERNEL_SIZE	0x200000	// kernel size
+#define ROOT_SIZE	(WINDOW_SIZE-WELCOME_SIZE-KERNEL_SIZE-DB_SIZE-BOOT_SIZE)
+#define DB_SIZE		0xA00000
+
+#elif defined(FLASH_16MB) 
+
+// 16MB flash
+#define WINDOW_ADDR	0xA0000000
+#define WINDOW_SIZE	0x01000000
+
+#define BOOT_SIZE	0x040000	// boot loader
+#define WELCOME_SIZE	0x020000	// welcome+boot config
+#define KERNEL_SIZE	0x1A0000	// kernel size
+#define ROOT_SIZE	(WINDOW_SIZE-WELCOME_SIZE-KERNEL_SIZE-DB_SIZE-BOOT_SIZE)
+#define DB_SIZE		0x600000
+
+#else
+
+// 8MB flash
+#define WINDOW_ADDR     0xA0000000 	 
+#define WINDOW_SIZE     0x00800000 	 
+
+#define BOOT_SIZE       0x030000        // boot loader 	 
+#define WELCOME_SIZE    0x010000        // welcome+boot config 	 
+#define KERNEL_SIZE     0x180000        // kernel size 	 
+#define ROOT_SIZE       (WINDOW_SIZE-WELCOME_SIZE-KERNEL_SIZE-DB_SIZE-BOOT_SIZE) 	 
+#define DB_SIZE         0x230000
+
+
+#endif
+
+
+
+#define ONBOARD_ADDR 0x00000000
+
+#define ONBOARD_SIZE		WINDOW_SIZE
+#define ONBOARD_BANKWIDTH	2
+
+#ifdef CONFIG_MTD_STBOARDS_STEM_ADDR
+#define STEM_ADDR CONFIG_MTD_STBOARDS_STEM_ADDR
+#define STEM_SIZE CONFIG_MTD_STBOARDS_STEM_SIZE
+#endif
+
+#if ONBOARD_SIZE > 0
+static struct mtd_info *onboard_mtd;
+#endif
+#ifdef STEM_ADDR
+static struct mtd_info *stem_mtd;
+#endif
+
+#define dprintk(x...)  printk(KERN_DEBUG x)
+//#define dprintk(x...)
+
+#if defined(CONFIG_SH_STB1_HARP) || \
+    defined(CONFIG_SH_GX1_EVAL) || \
+    defined(CONFIG_SH_ST40_STARTER) || \
+    defined(CONFIG_SH_TMM_LR2) || \
+    defined(CONFIG_SH_STI5528_EVAL) || \
+    defined(CONFIG_SH_STB7100_MBOARD)
+#define NEED_VPP
+#include <asm/mach/harp.h>
+#endif
+
+#ifdef NEED_VPP
+/*
+ * The comments in mtd/map.h say that this needs to nest correctly,
+ * but in practice vpp gets disabled without being first enabled,
+ * so clearly this is not true. So ignore this, and simply enable and
+ * disable as requested.
+ */
+static void stboards_set_vpp(struct map_info *map, int vpp)
+{
+	if (vpp) {
+		harp_set_vpp_on();
+	} else {
+		harp_set_vpp_off();
+	}
+}
+#endif
+
+#if ONBOARD_SIZE > 0
+static struct map_info onboard_map = {
+	.name = "Onboard_Flash",
+	.size = ONBOARD_SIZE,
+	.bankwidth = ONBOARD_BANKWIDTH,
+#ifdef NEED_VPP
+	.set_vpp = stboards_set_vpp,
+#endif
+};
+#endif
+
+#ifdef STEM_ADDR
+static struct map_info stem_map = {
+	.name = "STEM Flash",
+	.size = STEM_SIZE,
+	.bankwidth = 4,
+};
+#endif
+
+
+static struct mtd_partition onboard_partitions[] = {
+	{
+		.name 		= "nor.boot",
+		.offset 	= 0x00000000,
+		.size		= BOOT_SIZE,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+	{
+		.name		= "nor.config_welcome",
+		.offset		= BOOT_SIZE,
+		.size		= WELCOME_SIZE,
+	},
+	{	.name		= "nor.kernel",
+		.offset		= BOOT_SIZE+WELCOME_SIZE,
+		.size		= KERNEL_SIZE,
+		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.root",
+		.offset		= BOOT_SIZE+WELCOME_SIZE+KERNEL_SIZE,
+		.size		= ROOT_SIZE,
+		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.db",
+		.offset		= BOOT_SIZE+WELCOME_SIZE+KERNEL_SIZE+ROOT_SIZE,
+		.size		= DB_SIZE,
+	},
+	/* partitions for upgrade */
+	{
+		.name		= "nor.kernel_root",
+		.offset		= BOOT_SIZE+WELCOME_SIZE,
+		.size		= KERNEL_SIZE+ROOT_SIZE,
+	},
+	{
+		.name		= "nor.kernel_root_db",
+		.offset		= BOOT_SIZE+WELCOME_SIZE,
+		.size		= KERNEL_SIZE+ROOT_SIZE+DB_SIZE,
+	},
+	{
+		.name		= "nor.all_noboot",
+		.offset		= BOOT_SIZE,
+		.size		= (WINDOW_SIZE-BOOT_SIZE),
+	},
+	{
+		.name		= "nor.all",
+		.offset		= 0,
+		.size		= WINDOW_SIZE,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+};
+static struct mtd_partition *parsed_parts;
+static const char *probes[] = { "cmdlinepart", NULL };
+
+int __init init_stboards(void)
+{
+	int nr_parts = 0;
+
+#ifdef CONFIG_SH_STB1_HARP
+	/* Enable writing to Flash */
+	ctrl_outl(3, EPLD_FLASHCTRL);
+#endif
+
+#if ONBOARD_SIZE > 0
+	printk(KERN_NOTICE
+	       "Generic ST boards onboard flash device: 0x%08x (%d.%dMB) at 0x%08x\n",
+	       ONBOARD_SIZE,
+	       (ONBOARD_SIZE / (1024 * 1024)),
+	       (ONBOARD_SIZE / ((1024 * 1024) / 10)) % 10, ONBOARD_ADDR);
+
+	onboard_map.phys = ONBOARD_ADDR;
+	onboard_map.size = ONBOARD_SIZE;
+	onboard_map.virt =
+	    (unsigned long *)ioremap(onboard_map.phys, onboard_map.size);
+	dprintk("%s %s[%d] onboard_map.virt = 0x%08x\n", __FILE__, __FUNCTION__,
+		__LINE__, (int)onboard_map.virt);
+	if (onboard_map.virt == 0) {
+		printk(KERN_ERR "Failed to ioremap onboard Flash\n");
+	} else {
+#ifndef CONFIG_MTD_COMPLEX_MAPPINGS
+		simple_map_init(&onboard_map);
+#endif
+#if defined(CONFIG_SH_STB1_HARP) || defined(CONFIG_SH_STB1_EVAL)
+		onboard_mtd = do_map_probe("jedec_probe", &onboard_map);
+#else
+		onboard_mtd = do_map_probe("cfi_probe", &onboard_map);
+#endif
+		if (onboard_mtd != NULL) {
+			onboard_mtd->owner = THIS_MODULE;
+#ifdef CONFIG_MTD_CMDLINE_PARTS
+			nr_parts =
+			    parse_mtd_partitions(onboard_mtd, probes,
+						 &parsed_parts, 0);
+#endif
+			if (nr_parts <= 0)
+				add_mtd_partitions(onboard_mtd,
+						   onboard_partitions,
+						   ARRAY_SIZE
+						   (onboard_partitions));
+			else
+				add_mtd_partitions(onboard_mtd, parsed_parts,
+						   nr_parts);
+		} else {
+			iounmap((void *)onboard_map.virt);
+		}
+	}
+#endif
+
+#ifdef STEM_ADDR
+	printk(KERN_NOTICE
+	       "Generic ST boards STEM flash device: 0x%08x at 0x%08x\n",
+	       STEM_SIZE, STEM_ADDR);
+
+	stem_map.phys = STEM_ADDR;
+	stem_map.size = STEM_SIZE;
+	stem_map.virt = (unsigned long)ioremap(stem_map.phys, stem_map.size);
+	if (stem_map.virt == 0) {
+		printk(KERN_ERR "Failed to ioremap STEM Flash\n");
+	} else {
+#ifndef CONFIG_MTD_COMPLEX_MAPPINGS
+		simple_map_init(&stem_map);
+#endif
+		stem_mtd = do_map_probe("cfi_probe", &stem_map);
+		if (stem_mtd != NULL) {
+			stem_mtd->owner = THIS_MODULE;
+#if ONBOARD_SIZE > 0
+			add_mtd_device(stem_mtd);
+#else
+			add_mtd_partitions(stem_mtd, onboard_partitions,
+					   ARRAY_SIZE(onboard_partitions));
+#endif
+		} else {
+			iounmap((void *)stem_map.virt);
+		}
+	}
+#endif
+
+	return -ENXIO;
+}
+
+static void __exit cleanup_stboards(void)
+{
+#if ONBOARD_SIZE > 0
+	if (onboard_mtd) {
+		del_mtd_partitions(onboard_mtd);
+		map_destroy(onboard_mtd);
+	}
+	if (onboard_map.virt != 0) {
+		iounmap((void *)onboard_map.virt);
+		onboard_map.virt = 0;
+	}
+#endif
+
+#ifdef STEM_ADDR
+	if (stem_mtd) {
+		del_mtd_partitions(stem_mtd);
+		map_destroy(stem_mtd);
+	}
+	if (stem_map.virt != 0) {
+		iounmap((void *)stem_map.virt);
+		stem_map.virt = 0;
+	}
+#endif
+}
+
+module_init(init_stboards);
+module_exit(cleanup_stboards);
diff -urN linux-2.6.17.14/include/asm-sh/cuberevo-mini-fta/coproc.h linux-dgs/include/asm-sh/cuberevo-mini-fta/coproc.h
--- linux-2.6.17.14/include/asm-sh/cuberevo-mini-fta/coproc.h	1970-01-01 09:00:00.000000000 +0900
+++ linux-dgs/include/asm-sh/cuberevo-mini-fta/coproc.h	2009-01-14 15:56:28.000000000 +0900
@@ -0,0 +1,13 @@
+/* ------------------------------------------------------------------------
+ *
+ *  HW dependent actions: STb7100 platform
+ */
+
+#define N_COPROC        2
+
+#define COPR_RAM_START	 	0x4000000	/* ST231 LMI RAM base address */
+
+#define SYSCON_REGS_BASE        P2SEGADDR(0x19001000)
+#define SYSCFG_09		(SYSCON_REGS_BASE + 0x124)
+#define SYSCFG_BOOT_REG(x)	(SYSCON_REGS_BASE + (x ? 0x168 : 0x170))
+#define SYSCFG_RESET_REG(x)	(SYSCON_REGS_BASE + (x ? 0x16c : 0x174))
diff -urN linux-2.6.17.14/include/asm-sh/cuberevo-mini-fta/st40_ide.h linux-dgs/include/asm-sh/cuberevo-mini-fta/st40_ide.h
--- linux-2.6.17.14/include/asm-sh/cuberevo-mini-fta/st40_ide.h	1970-01-01 09:00:00.000000000 +0900
+++ linux-dgs/include/asm-sh/cuberevo-mini-fta/st40_ide.h	2009-01-14 15:56:28.000000000 +0900
@@ -0,0 +1,51 @@
+/*
+ * include/asm-sh/stb7100ref/st40_ide.h
+ *
+ * This file contains all the definitions to support
+ * the IDE interface on stb7100ref board.
+ * IDE is mapped into EMI bank3.
+ */
+
+/* STb7100 only has one hw interface */
+#undef MAX_HWIFS
+#define MAX_HWIFS       1
+
+/* The ATA base address. This is the base of EMI bank 3. */
+#define ATA_ADDRESS           0xA2800000
+
+/* The ATA data base address offset. It is used to map
+ * all the ide registers on the hwif interface
+ * starting from this offset.
+ */
+#define ATA_DATA_OFFS_ADDRESS	0x00200000
+
+/* The ide registers offset. Registers will be stored into
+ * the hwif interface with a costant offset starting from
+ * the ATA data register address.
+ */
+#define REG_OFFSET		0x20000
+
+/* Only the control register has a different offset. */
+#define CTRL_REG_OFFSET		-0x40000
+
+/* ATA IRQ number */
+#define ATA_IRQ			IRL1_IRQ
+
+/* ide_enable does nothing because there is no external hardware to configure */
+#define ide_enable()
+
+/* hddi_reset does nothing for stb7100, because it does not have a HDDI interface. */
+#define hddi_reset()
+
+/* hddi_set_pio_timings does nothing for mb411, because it has not an HDDI
+ * interface and PIO timings are setted into the EMI bank3 (PIO4).
+ */
+#define hddi_set_pio_timings(rate)
+
+/* ide_ack_intr returns 1 when invoked.
+ * It is needed by the ide_intr function.
+ */
+#define ide_ack_intr(hwif)	1
+
+/* DMA in not supported for mb411 board, so hddi_setup_dma does nothing. */
+#define hddi_setup_dma(interface, address, offset)
