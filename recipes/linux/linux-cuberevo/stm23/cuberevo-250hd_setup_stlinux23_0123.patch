*** linux-sh4-2.6.23.17_stm23_0119-orig/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2009-06-06 20:17:15.000000000 +0200
--- linux-sh4/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2009-06-10 23:17:19.000000000 +0200
***************
*** 292,299 ****
  static char i2c_st[] = "i2c_st";
  static char spi_st[] = "spi_st_ssc";
  static struct platform_device stssc_devices[] = {
! 	STSSC_DEVICE(0x18040000, 119, 2, 0, 1, 2),
! 	STSSC_DEVICE(0x18041000, 118, 3, 0, 1, 2),
  	STSSC_DEVICE(0x18042000, 117, 4, 0, 1, 0xff),
  };
  
--- 292,299 ----
  static char i2c_st[] = "i2c_st";
  static char spi_st[] = "spi_st_ssc";
  static struct platform_device stssc_devices[] = {
! 	STSSC_DEVICE(0x18040000, 119, 2, 0, 1, 0xff),
! 	STSSC_DEVICE(0x18041000, 118, 3, 0, 2, 0xff),
  	STSSC_DEVICE(0x18042000, 117, 4, 0, 1, 0xff),
  };
  
diff -urN linux-2.6.17.14_stm22_0040_cuberevo-250hd/arch/sh/boards/dgstation/cuberevo-250hd/mach.c linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/arch/sh/boards/dgstation/cuberevo-250hd/mach.c
--- linux-2.6.17.14_stm22_0040_cuberevo-250hd/arch/sh/boards/dgstation/cuberevo-250hd/mach.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/arch/sh/boards/dgstation/cuberevo-250hd/mach.c	2010-02-25 17:36:50.000000000 +0100
@@ -0,0 +1,60 @@
+/*
+ * arch/sh/boards/st/mb442/mach.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * Machine vector for the STMicroelectronics STb7100 Reference board.
+ */
+
+#include <linux/init.h>
+#include <linux/irq.h>
+#include <asm/system.h>
+#include <asm/io.h>
+#include <asm/machvec.h>
+#include <asm/irq-stb7100.h>
+
+static void __iomem *mb442_ioport_map(unsigned long port, unsigned int size)
+{
+#ifdef CONFIG_BLK_DEV_ST40IDE
+	/*
+	 * The IDE driver appears to use memory addresses with IO port
+	 * calls. This needs fixing.
+	 */
+	return (void __iomem *)port;
+#endif
+
+	/* However picking somewhere safe isn't as easy as you might think.
+	 * I used to use external ROM, but that can cause problems if you are
+	 * in the middle of updating Flash. So I'm now using the processor core
+	 * version register, which is guaranted to be available, and non-writable.
+	 */
+	return (void __iomem *)CCN_PVR;
+}
+
+static void __init mb442_init_irq(void)
+{
+	/* enable individual interrupt mode for externals */
+	plat_irq_setup_pins(IRQ_MODE_IRQ);
+
+	/* Set the ILC to route external interrupts to the the INTC */
+	/* Outputs 0-3 are the interrupt pins, 4-7 are routed to the INTC */
+	/* Inputs sys-irq2 and 3 are unused (pulled high) */
+	ilc_route_external(ILC_EXT_IRQ0, 4, 0);		/* SMC Ethernet */
+	ilc_route_external(ILC_EXT_IRQ1, 5, 0);		/* ATA */
+	ilc_route_external(ILC_EXT_IRQ2, 6, 0);		/* Unused */
+	ilc_route_external(ILC_EXT_MDINT, 7, 0);	/* STe100 PHY */
+}
+
+void __init mb442_setup(char**);
+
+static struct sh_machine_vector mv_mb442 __initmv = {
+	.mv_name		= "DGStation cuberevo-250hd board",
+	.mv_setup		= mb442_setup,
+	.mv_nr_irqs		= NR_IRQS,
+	.mv_init_irq		= mb442_init_irq,
+	.mv_ioport_map		= mb442_ioport_map,
+};
diff -urN linux-2.6.17.14_stm22_0040_cuberevo-250hd/arch/sh/boards/dgstation/cuberevo-250hd/Makefile linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/arch/sh/boards/dgstation/cuberevo-250hd/Makefile
--- linux-2.6.17.14_stm22_0040_cuberevo-250hd/arch/sh/boards/dgstation/cuberevo-250hd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/arch/sh/boards/dgstation/cuberevo-250hd/Makefile	2010-02-08 11:20:19.000000000 +0100
@@ -0,0 +1,5 @@
+#
+# Makefile for STMicroelectronics STb7100 Reference board
+#
+
+obj-y := setup.o mach.o
diff -urN linux-2.6.17.14_stm22_0040_cuberevo-250hd/arch/sh/boards/dgstation/cuberevo-250hd/setup.c linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/arch/sh/boards/dgstation/cuberevo-250hd/setup.c
--- linux-2.6.17.14_stm22_0040_cuberevo-250hd/arch/sh/boards/dgstation/cuberevo-250hd/setup.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/arch/sh/boards/dgstation/cuberevo-250hd/setup.c	2010-02-25 17:36:26.000000000 +0100
@@ -0,0 +1,341 @@
+/*
+ * arch/sh/boards/st/mb442/setup.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STb7100 Reference board support.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/stm/pio.h>
+#include <linux/stm/soc.h>
+#include <linux/spi/spi.h>
+#include <linux/delay.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/physmap.h>
+#include <linux/mtd/partitions.h>
+#include <linux/phy.h>
+#include <linux/lirc.h>
+#include <asm/irl.h>
+#include <linux/bpa2.h>
+
+static int ascs[2] __initdata = { (STASC_FLAG_NORTSCTS<<8) | 2, 3 };
+
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
+ 
+#ifdef CONFIG_32BIT
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x81000000,
+		.size  = 0x07000000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x05000000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#else
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x03800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x01600000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#endif /* CONFIG_32BIT */
+
+void __init mb442_setup(char** cmdline_p)
+{
+	printk("STMicroelectronics STb7100 Reference board initialisation\n");
+
+	stx7100_early_device_init();
+	stb7100_configure_asc(ascs, 2, 0);
+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+}
+
+/*static struct plat_stm_pwm_data pwm_private_info = {
+	.flags		= PLAT_STM_PWM_OUT1,
+};*/
+
+static struct plat_ssc_data ssc_private_info = {
+	.capability  =
+		ssc0_has(SSC_I2C_CAPABILITY) |
+		ssc1_has(SSC_I2C_CAPABILITY) |
+		ssc2_has(SSC_I2C_CAPABILITY),
+};
+
+/*static struct resource smc91x_resources[] = {
+	[0] = {
+		.start	= 0x02000300,
+		.end	= 0x02000300 + 0xff,
+		.flags	= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start	= IRL0_IRQ,
+		.end	= IRL0_IRQ,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device smc91x_device = {
+	.name		= "smc91x",
+	.id		= 0,
+	.num_resources	= ARRAY_SIZE(smc91x_resources),
+	.resource	= smc91x_resources,
+};*/
+
+#define	FLASH_32MB
+//#define FLASH_16MB
+
+#if defined(FLASH_32MB)
+
+// 32MB flash
+#define WINDOW_ADDR	0xA0000000
+#define WINDOW_SIZE	0x02000000
+
+#define BOOT_SIZE	0x040000	// boot loader
+#define WELCOME_SIZE	0x020000	// welcome+boot config
+#define KERNEL_SIZE	0x220000	// kernel size
+#define ROOT_SIZE	(WINDOW_SIZE-WELCOME_SIZE-KERNEL_SIZE-DB_SIZE-BOOT_SIZE)
+#define DB_SIZE	0x800000
+
+#elif defined(FLASH_16MB) 
+
+// 16MB flash
+#define WINDOW_ADDR	0xA0000000
+#define WINDOW_SIZE	0x01000000
+
+#define BOOT_SIZE	0x040000	// boot loader
+#define WELCOME_SIZE	0x020000	// welcome+boot config
+#define KERNEL_SIZE	0x1A0000	// kernel size
+#define ROOT_SIZE	(WINDOW_SIZE-WELCOME_SIZE-KERNEL_SIZE-DB_SIZE-BOOT_SIZE)
+#define DB_SIZE		0x600000
+
+#else
+
+// 8MB flash
+#define WINDOW_ADDR     0xA0000000 	 
+#define WINDOW_SIZE     0x00800000 	 
+
+#define BOOT_SIZE       0x030000        // boot loader 	 
+#define WELCOME_SIZE    0x010000        // welcome+boot config 	 
+#define KERNEL_SIZE     0x180000        // kernel size 	 
+#define ROOT_SIZE       (WINDOW_SIZE-WELCOME_SIZE-KERNEL_SIZE-DB_SIZE-BOOT_SIZE) 	 
+#define DB_SIZE         0x230000
+
+
+#endif
+
+
+
+#define ONBOARD_ADDR 0x00000000
+
+#define ONBOARD_SIZE		WINDOW_SIZE
+#define ONBOARD_BANKWIDTH	2
+
+static struct mtd_partition mtd_parts_table[] = {
+	{
+		.name 		= "nor.boot",
+		.offset 	= 0x00000000,
+		.size		= BOOT_SIZE,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+	{
+		.name		= "nor.config_welcome",
+		.offset		= BOOT_SIZE,
+		.size		= WELCOME_SIZE,
+	},
+	{	.name		= "nor.kernel",
+		.offset		= BOOT_SIZE+WELCOME_SIZE,
+		.size		= KERNEL_SIZE,
+		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.root",
+		.offset		= BOOT_SIZE+WELCOME_SIZE+KERNEL_SIZE,
+		.size		= ROOT_SIZE,
+		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.db",
+		.offset		= BOOT_SIZE+WELCOME_SIZE+KERNEL_SIZE+ROOT_SIZE,
+		.size		= DB_SIZE,
+	},
+	/* partitions for upgrade */
+	{
+		.name		= "nor.kernel_root",
+		.offset		= BOOT_SIZE+WELCOME_SIZE,
+		.size		= KERNEL_SIZE+ROOT_SIZE,
+	},
+	{
+		.name		= "nor.kernel_root_db",
+		.offset		= BOOT_SIZE+WELCOME_SIZE,
+		.size		= KERNEL_SIZE+ROOT_SIZE+DB_SIZE,
+	},
+	{
+		.name		= "nor.all_noboot",
+		.offset		= BOOT_SIZE,
+		.size		= (WINDOW_SIZE-BOOT_SIZE),
+	},
+	{
+		.name		= "nor.all",
+		.offset		= 0,
+		.size		= WINDOW_SIZE,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+};
+
+static struct stpio_pin *vpp_pio;
+static void set_vpp(struct map_info *info, int enable)
+{
+	stpio_set_pin(vpp_pio, enable);
+}
+
+static struct physmap_flash_data physmap_flash_data = {
+	.width		= 2,
+	.set_vpp	= set_vpp,
+	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+	.parts		= mtd_parts_table
+};
+
+static struct resource physmap_flash_resource = {
+	.start		= 0x00000000,
+	.end		= 0x02000000 - 1,
+	.flags		= IORESOURCE_MEM,
+};
+
+static struct platform_device physmap_flash = {
+	.name		= "physmap-flash",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= &physmap_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &physmap_flash_resource,
+};
+
+static struct stpio_pin *phy_reset_pin;
+
+static int mb442_phy_reset(void* bus)
+{
+	/*stpio_set_pin(phy_reset_pin, 1);
+	udelay(1);
+	stpio_set_pin(phy_reset_pin, 0);
+	udelay(1);
+	stpio_set_pin(phy_reset_pin, 1);*/
+
+	return 1;
+}
+
+static struct plat_stmmacphy_data phy_private_data = {
+	.bus_id = 0,
+	.phy_addr = 1,
+	.phy_mask = 1,
+	.interface = PHY_INTERFACE_MODE_MII,
+	.phy_reset = &mb442_phy_reset,
+};
+
+static struct platform_device mb442_phy_device = {
+	.name		= "stmmacphy",
+	.id		= 0,
+	.num_resources	= 1,
+	.resource	= (struct resource[]) {
+                {
+			.name	= "phyirq",
+			.start	= IRL3_IRQ,
+			.end	= IRL3_IRQ,
+			.flags	= IORESOURCE_IRQ,
+		},
+	},
+	.dev = {
+		.platform_data = &phy_private_data,
+	 }
+};
+
+static struct platform_device pdiusbd12_device = {
+	.name           = "pdiusbd12",
+	.id             = -1,
+	.num_resources  = 2,
+	.resource       = (struct resource[]) {
+		{
+	                .start = 0xa2000000,
+		        .end   = 0xa200ffff,
+	        	.flags  = IORESOURCE_MEM,
+		},
+		{
+			.name   = "usbirq",
+	        	.start  = IRL0_IRQ,
+	        	.end    = IRL0_IRQ,
+	        	.flags  = IORESOURCE_IRQ,
+		},
+	},
+};
+
+static struct platform_device *mb442_devices[] __initdata = {
+	//&smc91x_device,
+	&physmap_flash,
+	&mb442_phy_device,
+	&pdiusbd12_device,
+};
+
+/* Configuration based on Futarque-RC signals train. */
+/*lirc_scd_t lirc_scd = {
+	.code = 0x3FFFC028,
+	.codelen = 0x1e,
+	.alt_codelen = 0,
+	.nomtime = 0x1f4,
+	.noiserecov = 0,
+};*/
+
+static int __init device_init(void)
+{
+	//struct stpio_pin *smc91x_reset;
+
+	stx7100_configure_sata();
+	//stx7100_configure_pwm(&pwm_private_info);
+	stx7100_configure_ssc(&ssc_private_info);
+	stx7100_configure_usb();
+	//stx7100_configure_lirc(&lirc_scd);
+	//stx7100_configure_pata(3, 1, IRL1_IRQ);
+
+	vpp_pio = stpio_request_pin(2, 7, "VPP", STPIO_OUT);
+
+	/*phy_reset_pin = stpio_request_set_pin(2, 4, "rtl8201_reset",
+					      STPIO_OUT, 1);*/
+
+	stx7100_configure_ethernet(0, 0, 0);
+
+	/* Reset the SMSC 91C111 Ethernet chip */
+	/*smc91x_reset = stpio_request_set_pin(2, 6, "smc91x_reset",
+					     STPIO_OUT, 0);
+	udelay(1);
+	stpio_set_pin(smc91x_reset, 1);
+	udelay(1);
+	stpio_set_pin(smc91x_reset, 0);*/
+
+	return platform_add_devices(mb442_devices,
+				    ARRAY_SIZE(mb442_devices));
+}
+
+device_initcall(device_init);
diff -urN linux-2.6.17.14_stm22_0040_cuberevo-250hd/include/asm-sh/cuberevo-250hd/coproc.h linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/include/asm-sh/cuberevo-250hd/coproc.h
--- linux-2.6.17.14_stm22_0040_cuberevo-250hd/include/asm-sh/cuberevo-250hd/coproc.h	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/include/asm-sh/cuberevo-250hd/coproc.h	2010-02-08 11:20:20.000000000 +0100
@@ -0,0 +1,13 @@
+/* ------------------------------------------------------------------------
+ *
+ *  HW dependent actions: STb7100 platform
+ */
+
+#define N_COPROC        2
+
+#define COPR_RAM_START	 	0x4000000	/* ST231 LMI RAM base address */
+
+#define SYSCON_REGS_BASE        P2SEGADDR(0x19001000)
+#define SYSCFG_09		(SYSCON_REGS_BASE + 0x124)
+#define SYSCFG_BOOT_REG(x)	(SYSCON_REGS_BASE + (x ? 0x168 : 0x170))
+#define SYSCFG_RESET_REG(x)	(SYSCON_REGS_BASE + (x ? 0x16c : 0x174))
diff -urN linux-2.6.17.14_stm22_0040_cuberevo-250hd/include/asm-sh/cuberevo-250hd/st40_ide.h linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/include/asm-sh/cuberevo-250hd/st40_ide.h
--- linux-2.6.17.14_stm22_0040_cuberevo-250hd/include/asm-sh/cuberevo-250hd/st40_ide.h	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.17.14_stm22_0040_cuberevo-250hd_ok/include/asm-sh/cuberevo-250hd/st40_ide.h	2010-02-08 11:20:20.000000000 +0100
@@ -0,0 +1,51 @@
+/*
+ * include/asm-sh/mb442/st40_ide.h
+ *
+ * This file contains all the definitions to support
+ * the IDE interface on mb442 board.
+ * IDE is mapped into EMI bank3.
+ */
+
+/* STb7100 only has one hw interface */
+#undef MAX_HWIFS
+#define MAX_HWIFS       1
+
+/* The ATA base address. This is the base of EMI bank 3. */
+#define ATA_ADDRESS           0xA2800000
+
+/* The ATA data base address offset. It is used to map
+ * all the ide registers on the hwif interface
+ * starting from this offset.
+ */
+#define ATA_DATA_OFFS_ADDRESS	0x00200000
+
+/* The ide registers offset. Registers will be stored into
+ * the hwif interface with a costant offset starting from
+ * the ATA data register address.
+ */
+#define REG_OFFSET		0x20000
+
+/* Only the control register has a different offset. */
+#define CTRL_REG_OFFSET		-0x40000
+
+/* ATA IRQ number */
+#define ATA_IRQ			IRL1_IRQ
+
+/* ide_enable does nothing because there is no external hardware to configure */
+#define ide_enable()
+
+/* hddi_reset does nothing for stb7100, because it does not have a HDDI interface. */
+#define hddi_reset()
+
+/* hddi_set_pio_timings does nothing for mb411, because it has not an HDDI
+ * interface and PIO timings are setted into the EMI bank3 (PIO4).
+ */
+#define hddi_set_pio_timings(rate)
+
+/* ide_ack_intr returns 1 when invoked.
+ * It is needed by the ide_intr function.
+ */
+#define ide_ack_intr(hwif)	1
+
+/* DMA in not supported for mb411 board, so hddi_setup_dma does nothing. */
+#define hddi_setup_dma(interface, address, offset)
