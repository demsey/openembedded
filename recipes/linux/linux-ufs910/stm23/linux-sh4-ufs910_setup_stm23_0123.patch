*** linux-sh4-2.6.23.17_stm23_0119-orig/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2009-06-06 20:17:15.000000000 +0200
--- linux-sh4/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2009-06-15 16:23:57.000000000 +0200
***************
*** 296,302 ****
  static char i2c_st[] = "i2c_st";
  static char spi_st[] = "spi_st_ssc";
  static struct platform_device stssc_devices[] = {
! 	STSSC_DEVICE(0x18040000, 119, 2, 0, 1, 2),
  	STSSC_DEVICE(0x18041000, 118, 3, 0, 1, 2),
  	STSSC_DEVICE(0x18042000, 117, 4, 0, 1, 0xff),
  };
--- 296,302 ----
  static char i2c_st[] = "i2c_st";
  static char spi_st[] = "spi_st_ssc";
  static struct platform_device stssc_devices[] = {
! 	STSSC_DEVICE(0x18040000, 119, 2, 0, 1, 0xff),
  	STSSC_DEVICE(0x18041000, 118, 3, 0, 1, 2),
  	STSSC_DEVICE(0x18042000, 117, 4, 0, 1, 0xff),
  };
*** linux-sh4-2.6.23.17_stm23_0119-orig/arch/sh/boards/st/mb442/setup.c	2009-06-06 20:17:14.000000000 +0200
--- linux-sh4/arch/sh/boards/st/mb442/setup.c	2009-06-15 20:25:30.000000000 +0200
***************
*** 19,36 ****
--- 19,58 ----
  #include <linux/mtd/mtd.h>
  #include <linux/mtd/physmap.h>
  #include <linux/mtd/partitions.h>
+ #include <linux/bpa2.h>
  #include <linux/phy.h>
  #include <linux/lirc.h>
  #include <asm/irl.h>
  
  static int ascs[2] __initdata = { 2, 3 };
  
+ const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+ const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
+ 
+ static struct bpa2_partition_desc bpa2_parts_table[] = {
+ 	{
+ 		.name  = "LMI_VID",
+ 		.start = 0x10800000,
+ 		.size  = 0x03800000,
+ 		.flags = 0,
+ 		.aka   = LMI_VID_partalias
+ 	},
+ 	{
+ 		.name  = "LMI_SYS",
+ 		.start = 0,
+ 		.size  = 0x00E80000,
+ 		.flags = 0,
+ 		.aka   = LMI_SYS_partalias
+ 	}
+ };
+ 
  void __init mb442_setup(char** cmdline_p)
  {
  	printk("STMicroelectronics STb7100 Reference board initialisation\n");
  
  	stx7100_early_device_init();
  	stb7100_configure_asc(ascs, 2, 0);
+  	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
  }
  
  static struct plat_stm_pwm_data pwm_private_info = {
***************
*** 40,91 ****
  static struct plat_ssc_data ssc_private_info = {
  	.capability  =
  		ssc0_has(SSC_I2C_CAPABILITY) |
! 		ssc1_has(SSC_SPI_CAPABILITY) |
  		ssc2_has(SSC_I2C_CAPABILITY),
  };
  
- static struct resource smc91x_resources[] = {
- 	[0] = {
- 		.start	= 0x02000300,
- 		.end	= 0x02000300 + 0xff,
- 		.flags	= IORESOURCE_MEM,
- 	},
- 	[1] = {
- 		.start	= IRL0_IRQ,
- 		.end	= IRL0_IRQ,
- 		.flags	= IORESOURCE_IRQ,
- 	},
- };
- 
- static struct platform_device smc91x_device = {
- 	.name		= "smc91x",
- 	.id		= 0,
- 	.num_resources	= ARRAY_SIZE(smc91x_resources),
- 	.resource	= smc91x_resources,
- };
- 
- static struct mtd_partition mtd_parts_table[3] = {
- 	{
- 		.name = "Boot firmware",
- 		.size = 0x00040000,
- 		.offset = 0x00000000,
- 	}, {
- 		.name = "Kernel",
- 		.size = 0x00100000,
- 		.offset = 0x00040000,
- 	}, {
- 		.name = "Root FS",
- 		.size = MTDPART_SIZ_FULL,
- 		.offset = 0x00140000,
- 	}
- };
- 
  static struct stpio_pin *vpp_pio;
  static void set_vpp(struct map_info *info, int enable)
  {
  	stpio_set_pin(vpp_pio, enable);
  }
  
  static struct physmap_flash_data physmap_flash_data = {
  	.width		= 2,
  	.set_vpp	= set_vpp,
--- 62,132 ----
  static struct plat_ssc_data ssc_private_info = {
  	.capability  =
  		ssc0_has(SSC_I2C_CAPABILITY) |
! 		ssc1_has(SSC_I2C_CAPABILITY) |
  		ssc2_has(SSC_I2C_CAPABILITY),
  };
  
  static struct stpio_pin *vpp_pio;
  static void set_vpp(struct map_info *info, int enable)
  {
  	stpio_set_pin(vpp_pio, enable);
  }
  
+ static struct resource physmap_flash_resource = {
+ 	.start		= 0x00000000,
+ 	.end		= 0x01000000 - 1,
+ 	.flags		= IORESOURCE_MEM,
+ };
+ 
+ 
+ static struct mtd_partition mtd_parts_table[9] = {
+ 	{
+ 	 .name = "Boot firmware          0xA000.0000-0xA001.FFFF",
+ 	 .size = 0x00020000,
+ 	 .offset = 0x00000000,
+ 	 },
+ 	{ 
+ 	 .name = "Kernel                 0xA004.0000-0xA01F.FFFF",
+ 	 .size = 0x001C0000,
+ 	 .offset = 0x00040000,
+ 	 },
+ 	{
+ 	 .name = "Config FS              0xA020.0000-0xA029.FFFF", 
+ 	 .size = 0x000A0000, 
+ 	 .offset = 0x00200000, 
+ 	 }, 
+ 	{ 
+ 	 .name = "Root FS                0xA02A.0000-0xA04D.FFFF",
+ 	 .size = 0x240000,
+ 	 .offset = 0x002A0000, 
+ 	 }, 
+ 	{
+ 	 .name = "APP_Modules            0xA04E.0000-0xA0AD.FFFF",
+ 	 .size = 0x600000, 
+ 	 .offset = 0x4e0000, 
+ 	 }, 
+ 	{
+ 	 .name = "EmergencyRoot          0xA0AE.0000-0xA0BF.FFFF",
+ 	 .size = 0x00120000, 
+ 	 .offset = 0xae0000, 
+ 	 }, 
+ 	{ 
+ 	 .name = "OtherData              0xA0C0.0000-0xA0FF.FFFF",
+ 	 .size = 0x400000, 
+ 	 .offset = 0xc00000, 
+ 	 }, 
+ 	{ 
+ 	 .name = "BootConfiguration      0xA002.0000-0xA003.FFFF", 
+ 	 .size = 0x00020000, 
+ 	 .offset = 0x00020000, 
+ 	 },
+ 	{ 
+ 	 .name = "Flash wo/ bootloader   0xA004.0000-0xA0FF.FFFF", 
+ 	 .size = 0x00FC0000,
+ 	 .offset = 0x00040000, 
+ 	 }
+ };
+ 
  static struct physmap_flash_data physmap_flash_data = {
  	.width		= 2,
  	.set_vpp	= set_vpp,
***************
*** 93,104 ****
  	.parts		= mtd_parts_table
  };
  
- static struct resource physmap_flash_resource = {
- 	.start		= 0x00000000,
- 	.end		= 0x00800000 - 1,
- 	.flags		= IORESOURCE_MEM,
- };
- 
  static struct platform_device physmap_flash = {
  	.name		= "physmap-flash",
  	.id		= -1,
--- 134,139 ----
***************
*** 109,165 ****
  	.resource	= &physmap_flash_resource,
  };
  
! static struct stpio_pin *phy_reset_pin;
! 
! static int mb442_phy_reset(void* bus)
! {
! 	stpio_set_pin(phy_reset_pin, 1);
! 	udelay(1);
! 	stpio_set_pin(phy_reset_pin, 0);
! 	udelay(1);
! 	stpio_set_pin(phy_reset_pin, 1);
! 
! 	return 1;
! }
! 
! static struct plat_stmmacphy_data phy_private_data = {
! 	.bus_id = 0,
! 	.phy_addr = 14,
! 	.phy_mask = 1,
! 	.interface = PHY_INTERFACE_MODE_MII,
! 	.phy_reset = &mb442_phy_reset,
! };
! 
! static struct platform_device mb442_phy_device = {
! 	.name		= "stmmacphy",
! 	.id		= 0,
! 	.num_resources	= 1,
! 	.resource	= (struct resource[]) {
!                 {
! 			.name	= "phyirq",
! 			.start	= IRL3_IRQ,
! 			.end	= IRL3_IRQ,
! 			.flags	= IORESOURCE_IRQ,
  		},
  	},
- 	.dev = {
- 		.platform_data = &phy_private_data,
- 	 }
  };
  
! static struct platform_device *mb442_devices[] __initdata = {
! 	&smc91x_device,
! 	&physmap_flash,
! 	&mb442_phy_device,
  };
  
! /* Configuration based on Futarque-RC signals train. */
! lirc_scd_t lirc_scd = {
! 	.code = 0x3FFFC028,
! 	.codelen = 0x1e,
! 	.alt_codelen = 0,
! 	.nomtime = 0x1f4,
! 	.noiserecov = 0,
  };
  
  static int __init device_init(void)
--- 144,188 ----
  	.resource	= &physmap_flash_resource,
  };
  
! static struct platform_device smsc_lan9115 = {
! 	.name		= "smc911x",
! 	.id		= -1,
! 	.num_resources	= 4,
! 	.resource	= (struct resource []) {
! 		{
! 			.flags = IORESOURCE_MEM,
! 			.start = 0x02000000,
! 			.end   = 0x020000ff,
! 		},
! 		{
! 			.flags = IORESOURCE_IRQ,
! 			.start = IRL0_IRQ,
! 			.end   = IRL0_IRQ,
! 		},
! 		{
! 			.flags = IORESOURCE_IRQ,
! 			.name  = "polarity",
! 			.start = 1,
! 			.end   = 1,
! 		},
! 		{
! 			.flags = IORESOURCE_IRQ,
! 			.name  = "type",
! 			.start = 1,
! 			.end   = 1,
  		},
  	},
  };
  
! static struct platform_device led_device = {
! 	.name		= "ufs910-led",
! 	.id		= -1,
  };
  
! static struct platform_device *mb442_devices[] __initdata = {
! 	&physmap_flash,
! 	&smsc_lan9115,
! 	&led_device,
  };
  
  static int __init device_init(void)
***************
*** 170,191 ****
  	stx7100_configure_pwm(&pwm_private_info);
  	stx7100_configure_ssc(&ssc_private_info);
  	stx7100_configure_usb();
! 	stx7100_configure_lirc(&lirc_scd);
! 	stx7100_configure_pata(3, 1, IRL1_IRQ);
  
  	vpp_pio = stpio_request_set_pin(2, 7, "flash_VPP", STPIO_OUT, 0);
  
- 	phy_reset_pin = stpio_request_set_pin(2, 4, "ste100p_reset",
- 					      STPIO_OUT, 1);
- 	stx7100_configure_ethernet(0, 0, 0);
- 
  	/* Reset the SMSC 91C111 Ethernet chip */
  	smc91x_reset = stpio_request_set_pin(2, 6, "smc91x_reset",
  					     STPIO_OUT, 0);
! 	udelay(1);
  	stpio_set_pin(smc91x_reset, 1);
- 	udelay(1);
  	stpio_set_pin(smc91x_reset, 0);
  
  	return platform_add_devices(mb442_devices,
  				    ARRAY_SIZE(mb442_devices));
--- 193,211 ----
  	stx7100_configure_pwm(&pwm_private_info);
  	stx7100_configure_ssc(&ssc_private_info);
  	stx7100_configure_usb();
! 	stx7100_configure_lirc(NULL);
! 	/* fixme crasdht stx7100_configure_pata(3, 1, IRL1_IRQ); */
  
  	vpp_pio = stpio_request_set_pin(2, 7, "flash_VPP", STPIO_OUT, 0);
  
  	/* Reset the SMSC 91C111 Ethernet chip */
  	smc91x_reset = stpio_request_set_pin(2, 6, "smc91x_reset",
  					     STPIO_OUT, 0);
! 	stpio_set_pin(smc91x_reset, 0);
  	stpio_set_pin(smc91x_reset, 1);
  	stpio_set_pin(smc91x_reset, 0);
+ 	udelay(1000);
+ 	stpio_set_pin(smc91x_reset, 1);
  
  	return platform_add_devices(mb442_devices,
  				    ARRAY_SIZE(mb442_devices));
