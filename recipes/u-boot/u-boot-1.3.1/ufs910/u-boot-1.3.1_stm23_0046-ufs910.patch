diff -Naur u-boot-1.3.1.org/board/kathrein/ufs910/config.mk u-boot-1.3.1/board/kathrein/ufs910/config.mk
--- u-boot-1.3.1.org/board/kathrein/ufs910/config.mk	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/board/kathrein/ufs910/config.mk	2010-04-27 11:38:04.372905221 +0200
@@ -0,0 +1,43 @@
+#
+# (C) Copyright 2005
+# Andy Sturges (andy.sturges@st.com)
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+#
+# MB442 (STb7100REF or Coco) board
+#
+#	Valid values for TEXT_BASE are:
+#
+#	0x87F00000	29-bit mode (Traditional Mode)
+#	0x83F00000	32-bit mode (Space-Enhancement Mode)
+#
+# Note:	Alternative definitions of TEXT_BASE are put into
+#	'config.tmp' from the top-level 'Makefile'.
+#
+
+sinclude $(OBJTREE)/board/$(BOARDDIR)/config.tmp
+
+ifndef TEXT_BASE
+# Installs at SDRAM BASE  + 63M in P1 (cachable)
+TEXT_BASE = 0x87F00000
+endif
+
+PLATFORM_LDFLAGS +=
diff -Naur u-boot-1.3.1.org/board/kathrein/ufs910/init-ufs910.S u-boot-1.3.1/board/kathrein/ufs910/init-ufs910.S
--- u-boot-1.3.1.org/board/kathrein/ufs910/init-ufs910.S	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/board/kathrein/ufs910/init-ufs910.S	2010-04-27 11:38:04.372905221 +0200
@@ -0,0 +1,207 @@
+
+#include "asm/stb7100reg.h"
+#include "../../../cpu/sh/init_ram.S"
+
+/*
+ * The poke table is a series of long words, in the format
+ *
+ *       opcode, address, operand, ...
+ *
+ * An opcode of 0 marks the table end
+ */
+
+
+	.section .data.init, "a"
+
+	.balign 32
+
+__memory_setup_table:
+
+	/*
+	 * CLOCKGENA setup PLL0
+	 */
+	POKE_LONG(STB7100_CLOCKGENA_LOCK, 0xc0de)
+	OR_LONG(STB7100_CLOCKGENA_PLL0_CFG, 0x00100000)
+	UPDATE_LONG(STB7100_CLOCKGENA_PLL0_CFG, 0xfff7ffff, 0)
+#if (INPUT_CLOCK_RATE == 30)
+	UPDATE_LONG(STB7100_CLOCKGENA_PLL0_CFG, 0xfff80000, 0x14 | (0xb1 << 8) | (0x0 << 16))
+#else
+	UPDATE_LONG(STB7100_CLOCKGENA_PLL0_CFG, 0xfff80000, 0x06 | (0x3b << 8) | (0x0 << 16))
+#endif
+	OR_LONG(STB7100_CLOCKGENA_PLL0_CFG, 0x00080000)
+	WHILE_NE(STB7100_CLOCKGENA_PLL0_STATUS, 0x00000001, 0x00000001)
+	UPDATE_LONG(STB7100_CLOCKGENA_PLL0_CFG, 0xffefffff, 0)
+	POKE_LONG(STB7100_CLOCKGENA_LOCK, 0x0)
+	/*
+	 * CLOCKGENA setup PLL1
+	 */
+	POKE_LONG(STB7100_CLOCKGENA_LOCK, 0xc0de)
+	POKE_LONG(STB7100_CLOCKGENA_PLL1_BYPASS, 0x00000002)
+	UPDATE_LONG(STB7100_CLOCKGENA_PLL1_CFG, 0xfff7ffff, 0)
+	UPDATE_LONG(STB7100_CLOCKGENA_PLL1_CFG, 0xfff80000, 0x09 | (0x85 << 8) | (0x1 << 16)) /*399Mhz kdhong*/
+	OR_LONG(STB7100_CLOCKGENA_PLL1_CFG, 0x00080000)
+	WHILE_NE(STB7100_CLOCKGENA_PLL1_STATUS, 0x00000001, 0x00000001)
+	POKE_LONG(STB7100_CLOCKGENA_PLL1_BYPASS, 0x00000000)
+	POKE_LONG(STB7100_CLOCKGENA_LOCK, 0x0)
+	/*
+	 * SYSCONF setup
+	 */
+	POKE_LONG(STB7100_SYSCONF_SYS_CFG11, 0x0807feff) /*Pad load - 35pF similar as 15pF*/
+
+	WHILE_NE(STB7100_SYSCONF_SYS_STA12, (1 << 9) | (1 << 19), (1 << 9) | (1 << 19))
+	WHILE_NE(STB7100_SYSCONF_SYS_STA13, (1 << 9) | (1 << 19), (1 << 9) | (1 << 19))
+
+	POKE_LONG(STB7100_SYSCONF_SYS_CFG12, 0x4000000f | (0xf << 12) | (0xf << 23))
+	POKE_LONG(STB7100_SYSCONF_SYS_CFG13, 0x4000000f | (0xf << 12) | (0xf << 23))
+
+	IF_DEVID(STB7100_CUT1)
+	  POKE_LONG(STB7100_SYSCONF_SYS_CFG14, (1 << 18) | (0x5a << 20))
+	  POKE_LONG(STB7100_SYSCONF_SYS_CFG15, (1 << 19) | (0xa9 << 20))
+	  POKE_LONG(STB7100_SYSCONF_SYS_CFG20, (1 << 18) | (0x5a << 20))
+	  POKE_LONG(STB7100_SYSCONF_SYS_CFG21, (1 << 19) | (0xa9 << 20))
+	ENDIF
+
+	/*
+	 * LMI SYS setup
+	 */
+	POKE_LONG(ST40_LMI_MIM_0(SYS), 0x861a0247)
+	POKE_LONG(ST40_LMI_MIM_1(SYS), 0x01010022)
+
+	POKE_LONG(ST40_LMI_STR(SYS), 0x35b06455)
+
+#if CONFIG_SH_MB442_128
+	POKE_LONG(ST40_LMI_SDRA0(SYS), 0x0c001a00)
+	POKE_LONG(ST40_LMI_SDRA1(SYS), 0x0c001a00)
+#else
+	POKE_LONG(ST40_LMI_SDRA0(SYS), 0x08001900)
+	POKE_LONG(ST40_LMI_SDRA1(SYS), 0x08001900)
+#endif
+
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000001)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000003)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000001)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000002)
+
+	POKE_LONG(ST40_LMI_SDMR0(SYS), 0x00000402)
+	POKE_LONG(ST40_LMI_SDMR0(SYS), 0x00000133)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000002)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000004)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000004)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000004)
+	POKE_LONG(ST40_LMI_SDMR0(SYS), 0x00000033)
+	POKE_LONG(ST40_LMI_SCR(SYS), 0x00000000)
+
+	/*
+	 * LMI VID setup
+	 */
+	POKE_LONG(ST40_LMI_MIM_0(VID), 0x861a0247)
+	POKE_LONG(ST40_LMI_MIM_1(VID), 0x01010022)
+
+	POKE_LONG(ST40_LMI_STR(VID), 0x35b06455)
+	POKE_LONG(ST40_LMI_SDRA0(VID), 0x14001900)
+	POKE_LONG(ST40_LMI_SDRA1(VID), 0x14001900)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000001)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000003)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000001)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000002)
+	POKE_LONG(ST40_LMI_SDMR0(VID), 0x00000402)
+	POKE_LONG(ST40_LMI_SDMR0(VID), 0x00000133)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000002)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000004)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000004)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000004)
+	POKE_LONG(ST40_LMI_SDMR0(VID), 0x00000033)
+	POKE_LONG(ST40_LMI_SCR(VID), 0x00000000)
+
+#if CONFIG_SH_MB442_128
+       POKE_LONG(SH4_CCN_CCR, 0x8000090d)
+#endif
+
+	/*
+	 * EMI setup
+	 */
+	POKE_LONG(ST40_EMI_BANK_ENABLE, 0x00000005)
+
+	POKE_LONG(ST40_EMI_BANK0_BASEADDRESS, 0x00000000)
+	POKE_LONG(ST40_EMI_BANK1_BASEADDRESS, 0x00000002)
+	POKE_LONG(ST40_EMI_BANK2_BASEADDRESS, 0x00000008)
+	POKE_LONG(ST40_EMI_BANK3_BASEADDRESS, 0x0000000a)
+	POKE_LONG(ST40_EMI_BANK4_BASEADDRESS, 0x0000000c)
+	/* FLASH 0 */
+	POKE_LONG(ST40_EMI_BANK0_EMICONFIGDATA0, 0x001016d1)
+	POKE_LONG(ST40_EMI_BANK0_EMICONFIGDATA1, 0x9d200000)
+	POKE_LONG(ST40_EMI_BANK0_EMICONFIGDATA2, 0x9d220000)
+	POKE_LONG(ST40_EMI_BANK0_EMICONFIGDATA3, 0x00000000)
+	/* FLASH 1*/
+	POKE_LONG(ST40_EMI_BANK1_EMICONFIGDATA0, 0x001016d1)
+	POKE_LONG(ST40_EMI_BANK1_EMICONFIGDATA1, 0x9d200000)
+	POKE_LONG(ST40_EMI_BANK1_EMICONFIGDATA2, 0x9d220000)
+	POKE_LONG(ST40_EMI_BANK1_EMICONFIGDATA3, 0x00000000)
+	/* EPLD & LAN91C111 */
+	POKE_LONG(ST40_EMI_BANK2_EMICONFIGDATA0, 0x0442a6d1)
+	POKE_LONG(ST40_EMI_BANK2_EMICONFIGDATA1, 0x8F040404)
+	POKE_LONG(ST40_EMI_BANK2_EMICONFIGDATA2, 0x8F040404)
+	POKE_LONG(ST40_EMI_BANK2_EMICONFIGDATA3, 0x00000000)
+	/* ATAPI */
+
+	IF_DEVID(STB7100_CUT1)
+	  POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA0, 0x00021791)
+	  POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA1, 0x08004141)
+	  POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA2, 0x08004141)
+	ELSE
+	  POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA0, 0x00200791)
+	  POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA1, 0x0c006700)
+	  POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA2, 0x0c006700)
+	ENDIF
+	POKE_LONG(ST40_EMI_BANK3_EMICONFIGDATA3, 0x00000000)
+	/* CIMAX */
+	POKE_LONG(ST40_EMI_BANK4_EMICONFIGDATA0, 0x046576d9)
+	POKE_LONG(ST40_EMI_BANK4_EMICONFIGDATA1, 0xff336633)
+	POKE_LONG(ST40_EMI_BANK4_EMICONFIGDATA2, 0xff336633)
+	POKE_LONG(ST40_EMI_BANK4_EMICONFIGDATA3, 0x00000000)
+
+	/* Program other EMI registers */
+
+	/* Program other EMI registers */
+	IF_DEVID(STB7100_CUT1)
+	  POKE_LONG(ST40_EMI_GENCFG, 0x00000010)
+	ENDIF
+	IF_DEVID(STB7100_CUT2)
+	  POKE_LONG(ST40_EMI_GENCFG, 0x00000050)
+	ENDIF
+	IF_DEVID(STB7100_CUT3)
+	  POKE_LONG(ST40_EMI_GENCFG, 0x00000050)
+	ENDIF
+	IF_DEVID(STB7109_CUT1)
+	  POKE_LONG(ST40_EMI_GENCFG, 0x00000010)
+	ENDIF
+	IF_DEVID(STB7109_CUT2)
+	  POKE_LONG(ST40_EMI_GENCFG, 0x00000010)
+	ENDIF
+	IF_DEVID(STB7109_CUT3)
+	  POKE_LONG(ST40_EMI_GENCFG, 0x00000010)
+	ENDIF
+
+#ifdef CONFIG_SH_SE_MODE
+  /*
+   * Note that we also manually need to move the System and Video LMI base
+   * addresses to their 32-bit SE mode locations as defined in the datasheet.
+   */
+        UPDATE_LONG(STB7100_SYSCONF_SYS_CFG36, 0xFF00FF00, 0x00600040)
+#ifdef CONFIG_SH_MB442_128
+        POKE_LONG(ST40_LMI_SDRA0_0(SYS), 0x48001a00)
+        POKE_LONG(ST40_LMI_SDRA1_0(SYS), 0x48001a00)
+#else
+        POKE_LONG(ST40_LMI_SDRA0_0(SYS), 0x44001900)
+        POKE_LONG(ST40_LMI_SDRA1_0(SYS), 0x44001900)
+#endif
+        POKE_LONG(ST40_LMI_SDRA0_0(VID), 0x64001900)
+        POKE_LONG(ST40_LMI_SDRA1_0(VID), 0x64001900)
+
+#endif	/* CONFIG_SH_SE_MODE */
+
+	END_MARKER
+
+__memory_setup_table_end:
+
+	.end
diff -Naur u-boot-1.3.1.org/board/kathrein/ufs910/Makefile u-boot-1.3.1/board/kathrein/ufs910/Makefile
--- u-boot-1.3.1.org/board/kathrein/ufs910/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/board/kathrein/ufs910/Makefile	2010-04-27 11:38:04.413655660 +0200
@@ -0,0 +1,52 @@
+#
+# (C) Copyright 2003
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+SOBJS	= init-$(BOARD).o
+
+COBJS	= $(BOARD).o vfd.o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(obj).depend $(OBJS) $(SOBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+clean:
+	rm -f $(SOBJS) $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak .depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -Naur u-boot-1.3.1.org/board/kathrein/ufs910/ufs910.c u-boot-1.3.1/board/kathrein/ufs910/ufs910.c
--- u-boot-1.3.1.org/board/kathrein/ufs910/ufs910.c	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/board/kathrein/ufs910/ufs910.c	2010-04-27 11:38:04.414654741 +0200
@@ -0,0 +1,281 @@
+/*
+ * (C) Copyright 2004 STMicroelectronics.
+ *
+ * Andy Sturges <andy.sturges@st.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <command.h>
+#include <asm/soc.h>
+#include <asm/stb7100reg.h>
+#include <asm/io.h>
+#include <asm/pio.h>
+#include "vfd.h"
+
+void stb7100_clocks(void);
+
+void flashWriteEnable(void)
+{
+  /* Enable Vpp for writing to flash */
+  /* QQQ - to do */
+}
+
+void flashWriteDisable(void)
+{
+  /* Disable Vpp for writing to flash */
+  /* QQQ - to do */
+}
+
+#define PIO_BASE  0xb8020000	/* Phys 0x18020000 */
+
+static void configPIO(void)
+{
+  /*  Setup PIO of ASC device */
+  SET_PIO_ASC(PIO_PORT(4), 3, 2, 4, 5);  /* UART2 - AS0 */
+
+  /*  Setup up ethernet reset */
+#if defined(CONFIG_DRIVER_SMC911X)
+  SET_PIO_PIN(PIO_PORT(2), 6, STPIO_OUT);
+#endif
+
+#ifdef CONFIG_DRIVER_VFD
+  SET_PIO_PIN(PIO_PORT(0),3,STPIO_BIDIR);
+  SET_PIO_PIN(PIO_PORT(0),4,STPIO_BIDIR);
+  SET_PIO_PIN(PIO_PORT(0),5,STPIO_BIDIR);
+#endif
+
+#ifdef CONFIG_DRIVER_BUTTONS
+  SET_PIO_PIN(PIO_PORT(1),0,STPIO_IN);
+  SET_PIO_PIN(PIO_PORT(1),1,STPIO_IN);
+  SET_PIO_PIN(PIO_PORT(1),2,STPIO_IN);
+#endif
+
+  SET_PIO_PIN(PIO_PORT(1),3,STPIO_IN);  /* RTR */
+
+  // board version initialize
+  SET_PIO_PIN(PIO_PORT(4),4,STPIO_IN);
+  SET_PIO_PIN(PIO_PORT(4),5,STPIO_IN);
+}
+
+#if defined(CONFIG_CMD_IDE)
+
+#ifdef CONFIG_SH_STB7100_IDE
+static void stb7100ref_init_ide(void)
+{
+  /* Enable ATAPI mode of EMI */
+  /* QQQ - to do */
+}
+#endif
+
+#endif
+
+int board_init(void)
+{
+	unsigned long sysconf;
+	/* Route UART2 instead of SCI to PIO4 */
+	/* Set ssc2_mux_sel = 0 */
+	sysconf = *STB7100_SYSCONF_SYS_CFG07;
+	sysconf &= ~(1<<3);
+	*STB7100_SYSCONF_SYS_CFG07 = sysconf;
+
+	configPIO();
+
+#ifdef CONFIG_DRIVER_SMC91111
+	/*  Reset ethernet chip */
+	STPIO_SET_PIN(PIO_PORT(2), 6, 1);
+	udelay(1000);
+	STPIO_SET_PIN(PIO_PORT(2), 6, 0);
+	udelay(1000);
+	STPIO_SET_PIN(PIO_PORT(2), 6, 1);
+#endif
+
+#ifdef CONFIG_DRIVER_VFD
+	vfd_init();
+	vfd_puts("Kathrein UFS-910");
+#endif
+
+
+#if defined(CONFIG_CMD_IDE)
+#ifdef CONFIG_SH_STB7100_IDE
+	stb7100ref_init_ide();
+#endif
+#ifdef CONFIG_SH_STB7100_SATA
+	stb7100_sata_init();
+#endif
+#endif
+
+	return 0;
+}
+
+int checkboard (void)
+{
+	printf ("\n\nBoard: STb7100 Kathrein UFS910"
+#ifdef CONFIG_SH_MB442_128
+		" [128MB]"
+#else
+		" [64MB]"
+#endif
+		"\n");
+
+	return 0;
+}
+
+#ifdef CONFIG_MISC_INIT_R
+#ifdef CONFIG_DRIVER_BUTTONS
+
+#define CMD_LINE_START	"cmd="
+#define CMD_LINE_END	"\n"
+#define CMD_LINE_EOF	"EOF"
+extern int run_command (const char *cmd, int flag);
+int run_script_file(void)
+{
+	int ret;
+	char *buf;
+	char *cmd_start, *cmd_end;
+	ret = run_command ("tftp a4000000 updatescript.sh", 0);
+	if(ret < 0)
+		return 0;
+	buf = (char*)(0xa4000000);
+
+	while(1)
+	{
+		cmd_start = strstr(buf, CMD_LINE_START);
+		if(cmd_start)
+		{
+			cmd_end = strstr(buf,CMD_LINE_END) ;
+			*cmd_end = '\0';
+			buf = cmd_end + 1;
+			cmd_start +=4;
+			if(strcmp(cmd_start, CMD_LINE_EOF)==0)
+			{
+				printf("END of FILE\n");
+				vfd_puts("UPDATE SUCCESS! ");
+				while(1);
+			}
+			printf("script file line = %s\n",cmd_start);
+			//3 STB7100 Specific Command
+			//3 VFD : Display VFD Message
+			if(strncmp(cmd_start, "VFD=",3)==0)
+			{
+				printf("VFD_DISPLAY Command\n");
+				vfd_puts(cmd_start);
+			}
+			//3 Normal u-boot command
+			else
+			{
+				if(run_command(cmd_start, 0) <0)
+				{
+					printf("script run error! cmd = %s\n", cmd_start);
+					vfd_puts("UPDATE FAILED!  ");
+					while(1);
+				}
+			}
+		}
+	}
+}
+#endif
+
+int misc_init_r(void)
+{
+#ifdef CONFIG_DRIVER_BUTTONS
+	/* not the best place to do this, but it should work */
+	static char def_bootargs[160] = "console=ttyAS0,115200 root=/dev/mtdblock5 mem=32m bigphysarea=1024 coprocessor_mem=2m@0x04000000,2m@0x04200000";
+	unsigned char board_version = (STPIO_GET_PIN(PIO_PORT(4),5) << 1) | STPIO_GET_PIN(PIO_PORT(4), 4);
+	unsigned char button_value = (STPIO_GET_PIN(PIO_PORT(1),0) <<2) | (STPIO_GET_PIN(PIO_PORT(1),1) <<1)  | (STPIO_GET_PIN(PIO_PORT(1),2) <<0);
+	int loop_count;
+#ifdef DEBUG
+	printf("board_version = %x\n", board_version);
+	printf("Button_value = %x\n", button_value);
+#endif
+	if(((board_version == 3) && (button_value == 0x04)) || ((board_version ==0) && (button_value == 6))) //ufs910 menu key pressed
+	{
+		vfd_puts("Emergency Boot  ");
+		printf("Boot From Emergency Root File System Upate Appliction\n");
+		setenv("bootargs",def_bootargs);
+	}
+	else if(((board_version == 3) && (button_value == 0x06)) || ((board_version ==0) && (button_value == 5))) // v-format key...
+	{
+		const char cmd_start[]= "dhcp";
+		//2 Running All Image Update
+		vfd_puts("ALL IMAGE UPDATE");
+
+		printf("All Image Update Process Start......\n");
+
+		if(run_command(cmd_start, 0) < 0)
+		{
+			printf("script run error! cmd = %s\n", cmd_start);
+			vfd_puts("DHCP FAILED!FAIL");
+			while(1);
+			return 0;
+		}
+		run_script_file();
+	}
+	else if( ((board_version == 3) && (button_value == 0x05)) || ((board_version ==0) && (button_value == 3))) // exit button
+	{
+		//3 Waiting for Option Button.
+		vfd_puts("TST\\DBG\\FTP\\    ");
+		loop_count = 5*5; // wait 5 second
+		while(loop_count)
+		{
+			button_value = (STPIO_GET_PIN(PIO_PORT(1),0) <<2) | (STPIO_GET_PIN(PIO_PORT(1),1) <<1)  | (STPIO_GET_PIN(PIO_PORT(1),2) <<0);
+#ifdef DEBUG
+			printf("Button_value = %x\n", button_value);
+#endif
+			if(((board_version == 3) && (button_value == 0x03 || button_value == 0x04 || button_value == 0x06 )) ||
+				((board_version ==0) && (button_value == 6  || button_value == 0x05 )))
+				break;
+			else
+				loop_count--;
+			udelay(200000); //sleep 200ms
+		}
+		//2 No key press... Normal Mode Booting...
+		if(loop_count ==0)// goto normal state..
+		{
+			vfd_puts("Normal Booting..");
+		}
+		//2 press exit button and press option --> All Flash Image Update
+		if(((board_version == 3) && (button_value == 0x03)))
+		{
+			vfd_puts("ALL IMAGE UPDATE");
+			printf("All Image Update Process Start......\n");
+			run_script_file();
+		}
+		//2 Press exit button and press menu button --> Debug Mode On (add testmod=1)<->
+		else if(((board_version == 3) && (button_value == 0x04)) || ((board_version ==0) && (button_value == 6)))
+		{
+			vfd_puts("Enter DEBUG MODE");
+			printf("Boot From Debug Mode On\n");
+			strcat(def_bootargs," testmode=1");
+			setenv("bootargs",def_bootargs);
+		}
+		//2 press exit button and press v-format button --> Debug Serial Console On... Wakeup Silent Serial Mode
+		else if(((board_version == 3) && (button_value == 0x06)) || ((board_version ==0) && (button_value == 5)))
+		{
+			vfd_puts("Enter TEST  MODE");
+			printf("Boot From Debug Mode On and Test Mode\n");
+			strcat(def_bootargs," testmode=1 factorytest=1");
+			setenv("bootargs",def_bootargs);
+		}
+	}
+#endif
+	return 0;
+}
+#endif
diff -Naur u-boot-1.3.1.org/board/kathrein/ufs910/vfd.c u-boot-1.3.1/board/kathrein/ufs910/vfd.c
--- u-boot-1.3.1.org/board/kathrein/ufs910/vfd.c	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/board/kathrein/ufs910/vfd.c	2010-04-27 11:38:04.416654926 +0200
@@ -0,0 +1,493 @@
+#include <common.h>
+#include <command.h>
+#include <config.h>
+#include <asm/io.h>
+#include <asm/pio.h>
+#include "vfd.h"
+
+#ifdef DEBUG
+#define dprint(fmt,args...) printf(fmt, ##args)
+#else
+#define dprint(fmt,args...)
+#endif
+
+#define PIO_BASE  0xb8020000
+
+#ifdef CONFIG_DRIVER_VFD
+
+unsigned char *ROM_Char_Table=NULL;
+
+unsigned char ROM_KATHREIN[256] =
+{
+        0x00,//0x00, 
+        0x00,//0x01, icon #1
+        0x01,//0x02, icon #2
+        0x02,//0x03, icon #3
+        0x03,//0x04, icon #4
+        0x04,//0x05, icon #5
+        0x05,//0x06, icon #6
+        0x06,//0x07, icon #7
+        0x10,//0x08, 
+        0x10,//0x09, 
+        0x10,//0x0a, 
+        0x10,//0x0b, 
+        0x10,//0x0c, 
+        0x10,//0x0d, 
+        0x10,//0x0e, 
+        0x10,//0x0f, 
+
+        0x10,//0x10,,reserved  
+        0x11,//0x11,,reserved  
+        0x12,//0x12,,reserved  
+        0x13,//0x13,,reserved  
+        0x14,//0x14,,reserved  
+        0x15,//0x15,,reserved  
+        0x16,//0x16,,reserved  
+        0x17,//0x17,,reserved  
+        0x18,//0x18,,reserved  
+        0x19,//0x19,,reserved  
+        0x1a,//0x1a,,reserved  
+        0x1b,//0x1b,,reserved  
+        0x1c,//0x1c,,reservedr 
+        0x10,//0x1d,,reserved  
+        0x10,//0x1e,,reserved  
+        0x10,//0x1f, , reserved
+
+        0x20,//0x20, <space>
+        0x21,//0x21,!
+        0x22,//0x22,"
+        0x23,//0x23,#
+        0x24,//0x24,$
+        0x25,//0x25,%
+        0x26,//0x26,&
+        0x27,//0x27,'
+        0x28,//0x28,(
+        0x29,//0x29,)
+        0x2a,//0x2a,*
+        0x2b,//0x2b,+
+        0x2c,//0x2c,,
+        0x2d,//0x2d,-
+        0x2e,//0x2e,.
+        0x2f,//0x2f,/
+
+        0x30,//0x30,0   
+        0x31,//0x31,1    
+        0x32,//0x32,2    
+        0x33,//0x33,3    
+        0x34,//0x34,4    
+        0x35,//0x35,5    
+        0x36,//0x36,6    
+        0x37,//0x37,7    
+        0x38,//0x38,8    
+        0x39,//0x39,9    
+        0x3a,//0x3a,:    
+        0x3b,//0x3b,;   
+        0x3c,//0x3c,<    
+        0x3d,//0x3d,=    
+        0x3e,//0x3e,>    
+        0x3f,//0x3f,?  
+
+        0x40,//0x40,@ 
+        0x41,//0x41,A 
+        0x42,//0x42,B 
+        0x43,//0x43,C 
+        0x44,//0x44,D 
+        0x45,//0x45,E 
+        0x46,//0x46,F 
+        0x47,//0x47,G 
+        0x48,//0x48,H 
+        0x49,//0x49,I 
+        0x4a,//0x4a,J 
+        0x4b,//0x4b,K 
+        0x4c,//0x4c,L
+        0x4d,//0x4d,M 
+        0x4e,//0x4e,N 
+        0x4f,//0x4f,O
+
+        0x50,//0x50,P  
+        0x51,//0x51,Q  
+        0x52,//0x52,R  
+        0x53,//0x53,S  
+        0x54,//0x54,T  
+        0x55,//0x55,U  
+        0x56,//0x56,V
+        0x57,//0x57,W  
+        0x58,//0x58,X  
+        0x59,//0x59,Y
+        0x5a,//0x5a,Z
+        0x5b,//0x5b,[  
+        0x5c,//0x5c,
+        0x5d,//0x5d,]  
+        0x5e,//0x5e,^  
+        0x5f,//0x5f,_  
+
+        0x60,//0x60,`  
+        0x61,//0x61,a  
+        0x62,//0x62,b
+        0x63,//0x63,c  
+        0x64,//0x64,d
+        0x65,//0x65,e  
+        0x66,//0x66,f  
+        0x67,//0x67,g  
+        0x68,//0x68,h  
+        0x69,//0x69,i  
+        0x6a,//0x6a,j  
+        0x6b,//0x6b,k  
+        0x6c,//0x6c,|
+        0x6d,//0x6d,m  
+        0x6e,//0x6e,n  
+        0x6f,//0x6f,o 
+
+        0x70,//0x70,p  
+        0x71,//0x71,q  
+        0x72,//0x72,r  
+        0x73,//0x73,s  
+        0x74,//0x74,t  
+        0x75,//0x75,u  
+        0x76,//0x76,v  
+        0x77,//0x77,w  
+        0x78,//0x78,x  
+        0x79,//0x79,y  
+        0x7a,//0x7a,z  
+        0x7b,//0x7b,{  
+        0x7c,//0x7c,|  
+        0x7d,//0x7d,}  
+        0x7e,//0x7e,~  
+        0x7f,//0x7f,
+
+        0x80,//0x80,Ç
+        0x81,//0x81,ü  
+        0x82,//0x82,é  
+        0x83,//0x83,â  
+        0x84,//0x84,ä  
+        0x85,//0x85,à  
+        0x86,//0x86,á  
+        0x87,//0x87,ç  
+        0x88,//0x88,ê   
+        0x89,//0x89,ë 
+        0x8a,//0x8a,è  
+        0x8b,//0x8b,ï  
+        0x8c,//0x8c,î  
+        0x8d,//0x8d,ì  
+        0x8e,//0x8e,Ä  
+        0x8f,//0x8f,Â 
+
+        0x90,//0x90,É 
+        0x91,//0x91,ae  
+        0x92,//0x92,AE 
+        0x93,//0x93,ô 
+        0x94,//0x94,ö 
+        0x95,//0x95,ò 
+        0x96,//0x96,û 
+        0x97,//0x97,ù 
+        0x98,//0x98,ÿ 
+        0x99,//0x99,Ö 
+        0x9a,//0x9a,Ü  
+        0x9b,//0x9b,C| 
+        0x9c,//0x9c,POUND
+        0x9d,//0x9d,Y- 
+        0x9e,//0x9e,Pt 
+        0x9f,//0x9f,f
+
+        0xa0,//0xa0,á  
+        0xa1,//0xa1,í   
+        0xa2,//0xa2,ó   
+        0xa3,//0xa3,ú   
+        0xa4,//0xa4,ñ   
+        0xa5,//0xa5,Ñ   
+        0xa6,//0xa6,a_   
+        0xa7,//0xa7,o_   
+        0xa8,//0xa8,? upsidedown   
+        0xa9,//0xa9,LT corner   
+        0xaa,//0xaa,RT corner   
+        0xab,//0xab,1/2   
+        0xac,//0xac,1/4   
+        0xad,//0xad,í   
+        0xae,//0xae,<<   
+        0xaf,//0xaf,>> 
+
+        0xb0,//0xb0,
+        0xb1,//0xb1, 
+        0xb2,//0xb2, 
+        0xb3,//0xb3, 
+        0xb4,//0xb4, 
+        0xb5,//0xb5, 
+        0xb6,//0xb6, O- 
+        0xb7,//0xb7,  
+        0xb8,//0xb8, 
+        0xb9,//0xb9,  
+        0xba,//0xba, 
+        0xbb,//0xbb,  
+        0xbc,//0xbc,  
+        0xbd,//0xbd, 
+        0xbe,//0xbe,  
+        0xbf,//0xbf, 
+
+        0xc0,//0xc0, reserved  
+        0xc1,//0xc1, reserved  
+        0xc2,//0xc2, reserved  
+        0xc3,//0xc3, reserved  
+        0xc4,//0xc4, reserved  
+        0xc5,//0xc5, reserved  
+        0xc6,//0xc6, reserved  
+        0xc7,//0xc7, reserved  
+        0xc8,//0xc8, reserved  
+        0xc9,//0xc9, reserved  
+        0xca,//0xca, reserved  
+        0xcb,//0xcb, reserved  
+        0xcc,//0xcc, reserved 
+        0xcd,//0xcd, reserved  
+        0xce,//0xce, reserved  
+        0xcf,//0xcf, reserved 
+
+        0xd0,//0xd0, reserved  
+        0xd1,//0xd1, reserved  
+        0xd2,//0xd2, reserved  
+        0xd3,//0xd3, reserved  
+        0xd4,//0xd4, reserved  
+        0xd5,//0xd5, reserved  
+        0xd6,//0xd6, reserved  
+        0xd7,//0xd7, reserved  
+        0xd8,//0xd8, reserved  
+        0xd9,//0xd9, reserved  
+        0xda,//0xda, reserved  
+        0xdb,//0xdb, reserved  
+        0xdc,//0xdc,reserved  
+        0xdd,//0xdd, reserved  
+        0xde,//0xde, reserved  
+        0xdf,//0xdf, reserved 
+
+        0xe0,//0xe0, reserved  
+        0xe1,//0xe1, reserved  
+        0xe2,//0xe2, reserved  
+        0xe3,//0xe3, reserved  
+        0xe4,//0xe4, reserved  
+        0xe5,//0xe5, reserved  
+        0xe6,//0xe6, reserved  
+        0xe7,//0xe7, reserved  
+        0xe8,//0xe8, reserved  
+        0xe9,//0xe9, reserved  
+        0xea,//0xea, reserved  
+        0xeb,//0xeb, reserved  
+        0xec,//0xec,reserved  
+        0xed,//0xed, reserved  
+        0xee,//0xee, reserved  
+        0xef,//0xef, reserved 
+
+        0xf0,//0xf0,  reserved
+        0xf1,//0xf1,  reserved
+        0xf2,//0xf2,  reserved
+        0xf3,//0xf3,  reserved
+        0xf4,//0xf4,  reserved
+        0xf5,//0xf5,  reserved
+        0xf6,//0xf6,  reserved
+        0xf7,//0xf7,  reserved
+        0xf8,//0xf8,  reserved
+        0xf9,//0xf9,  reserved
+        0xfa,//0xfa,  reserved
+        0xfb,//0xfb,  reserved
+        0xfc,//0xfc, reserved
+        0xfd,//0xfd,  reserved
+        0xfe,//0xfe,  reserved
+        0xff,//0xff, reservedr
+};
+
+static int VFD_Write_Char_ML9208(unsigned char data, int current__, int length)
+{
+	int ii=0;
+
+	dprint("%s >\n", __func__);
+
+	if(current__ ==0) //start position
+	{
+		STPIO_SET_PIN(PIO_PORT(0),5, 1);
+		udelay(10);
+		STPIO_SET_PIN(PIO_PORT(0),5, 0);
+		udelay(10);
+	}
+
+	for(ii =0 ; ii< 8 ;ii++)
+	{
+		STPIO_SET_PIN(PIO_PORT(0),4, 0);
+		if((data  & 0x01) == 0x01)
+		{
+			STPIO_SET_PIN(PIO_PORT(0),3,1);
+		}
+		else
+		{
+			STPIO_SET_PIN(PIO_PORT(0),3,0);
+		}
+		udelay(10);
+		data = data >> 1;
+		STPIO_SET_PIN(PIO_PORT(0),4,1);
+		udelay(10);
+	}
+	udelay(20); //next digit
+	if(current__ ==(length-1))
+	{
+		udelay(40);
+		STPIO_SET_PIN(PIO_PORT(0),5,1);
+		udelay(50);
+	}
+	dprint("%s <\n", __func__);
+	return 0;
+}
+
+static int VFD_Write_Chars(unsigned char* data,int  length)
+{
+	int i=0;
+
+	dprint("%s >\n", __func__);
+
+	for(i=0 ; i < length ; i++)
+	{
+		VFD_Write_Char_ML9208(data[i],i, length);
+	}
+
+	dprint("%s <\n", __func__);
+	return 0;
+}
+
+static int VFD_DCRAM_Write(struct vfd_ioctl_data *data)
+{
+	unsigned char write_data[0x31];
+	int i = 0;
+	int j = 0;
+	dprint("%s >\n", __func__);
+	memset(&write_data[1],' ',0x30);
+
+	write_data[0] = (data->start_address & 0x0f) |DCRAM_COMMAND;
+
+	while ((i< data->length) && (j < 16))
+	{
+		j++;
+		write_data[j]=ROM_Char_Table[data->data[i]];
+		i++;
+	}
+	VFD_Write_Chars(write_data, 17);
+
+	dprint("%s <\n", __func__);
+	return 0;
+}
+
+static int VFD_Display_DutyCycle_Write(struct vfd_ioctl_data *data)
+{
+	unsigned char write_data[17];
+	int ii=0;
+
+	dprint("%s >\n", __func__);
+
+	write_data[0] = DIMMING_COMMAND;
+	write_data[1] = (data->start_address & 0x07)<< 5 | 0xf;
+	data->length = 1;
+	VFD_Write_Chars(write_data, data->length + 1);
+
+	write_data[0] = GRAY_LEVEL_DATA_COMMAND;
+	write_data[1] = 0xff;
+	write_data[2] = 0xff;
+	VFD_Write_Chars(write_data, 3);
+
+	write_data[0] = GRAY_LEVEL_ON_COMMAND;
+	for(ii=0; ii < 16  ; ii++)
+		write_data[ii+1] = 0x05;
+	VFD_Write_Chars(write_data, 17);
+	dprint("%s <\n", __func__);
+	return 0;
+}
+
+static int VFD_Number_Of_Digit_Set(struct vfd_ioctl_data *data)
+{
+	unsigned char write_data[2];
+
+	dprint("%s >\n", __func__);
+
+	write_data[0] = NUM_DIGIT_COMMAND;
+	write_data[1] = 0x0f;
+	VFD_Write_Chars(write_data, 2);
+
+	dprint("%s <\n", __func__);
+	return 0;
+}
+
+
+
+static int VFD_Display_Write_On_Off(struct vfd_ioctl_data *data)
+{
+	unsigned char write_data[1];
+
+	dprint("%s >\n", __func__);
+	if(data->start_address == 0x01)
+		data->start_address = 0x00; //light normal
+	else
+		data->start_address = 0x02; //light off
+	write_data[0] = (data->start_address & 0x03) |LIGHT_ON_COMMAND;
+	if(data->length !=0)
+	{
+		dprint("%s return on error <\n", __func__);
+		return -1;
+	}
+	VFD_Write_Chars(write_data, data->length + 1);
+	//now standby mode setting
+
+	dprint("%s <\n", __func__);
+	return 0;
+}
+
+void vfd_icon(char icon, char onoff)
+{
+	unsigned char write_data[8];
+
+	write_data[0] = icon | ADRAM_COMMAND;
+	write_data[1] = onoff;
+
+	VFD_Write_Chars(write_data, 2);
+}
+
+void vfd_puts(char* buf)
+{
+	struct vfd_ioctl_data data;
+	int len = strlen(buf);
+
+	dprint("%s >\n", __func__);
+	if(len > 16 || len < 0)
+	{
+		dprint("VFD String Length value is over! %d\n", len);
+		return;
+	}
+
+	data.start_address = 0x00;
+	memset(data.data,' ',16);
+	memcpy(data.data, buf, len);
+	data.length = 16;
+
+	VFD_DCRAM_Write(&data);
+	dprint("%s <\n", __func__);
+}
+
+void vfd_init(void)
+{
+	struct vfd_ioctl_data data;
+
+	dprint("%s >\n", __func__);
+	dprint("Kathrein UFS910 VFD module initializing\n");
+	ROM_Char_Table = ROM_KATHREIN;
+
+	//display write on
+	data.start_address = 0x01; //means light normal
+	data.length = 0;
+	VFD_Display_Write_On_Off(&data);
+
+	//digit-set ->Dagobert ->Origsoft does this after VFD_Display_Write_On_Off
+	data.start_address = 0xE0;
+	data.length = 0;
+	VFD_Number_Of_Digit_Set(&data);
+
+	//set full brightness
+	data.start_address = 0x07;
+	data.length = 0;
+	VFD_Display_DutyCycle_Write(&data);
+
+	dprint("%s <\n", __func__);
+}
+
+#endif
diff -Naur u-boot-1.3.1.org/board/kathrein/ufs910/vfd.h u-boot-1.3.1/board/kathrein/ufs910/vfd.h
--- u-boot-1.3.1.org/board/kathrein/ufs910/vfd.h	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/board/kathrein/ufs910/vfd.h	2010-04-27 11:38:04.417667275 +0200
@@ -0,0 +1,30 @@
+#ifndef _VFD_H_
+#define _VFD_H_
+
+#include <asm/types.h>
+#include <config.h>
+
+#define DCRAM_COMMAND		(0x20 & 0xf0)
+#define CGRAM_COMMAND		(0x40 & 0xf0)
+#define ADRAM_COMMAND		(0x60 & 0xf0)
+#define NUM_DIGIT_COMMAND		(0xE0 & 0xf0)
+#define LIGHT_ON_COMMAND		(0xE8 & 0xFC)
+#define DIMMING_COMMAND		(0xE4 & 0xFC)
+#define GRAY_LEVEL_DATA_COMMAND	(0xA0 & 0xF8)
+#define GRAY_LEVEL_ON_COMMAND	(0xC0 & 0xE0)
+
+#ifndef CONFIG_DRIVER_VFD
+#define vfd_puts(x)	printf("VFD: %s\n",x)
+#endif
+
+struct vfd_ioctl_data {
+	unsigned char start_address;
+	unsigned char data[64];
+	unsigned char length;
+};
+
+void vfd_icon(char icon, char onoff);
+void vfd_puts(char* buf);
+void vfd_init(void);
+
+#endif  /* _VFD_H_ */
diff -Naur u-boot-1.3.1.org/include/configs/ufs910.h u-boot-1.3.1/include/configs/ufs910.h
--- u-boot-1.3.1.org/include/configs/ufs910.h	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-1.3.1/include/configs/ufs910.h	2010-04-27 12:17:27.827656734 +0200
@@ -0,0 +1,291 @@
+/*
+ * (C) Copyright 2004 STMicroelectronics.
+ *
+ * Andy Sturges <andy.sturges@st.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/*
+ * High Level Configuration Options
+ * (easy to change)
+ */
+
+#define CONFIG_SH4	1		/* This is an SH4 CPU		*/
+#define CONFIG_CPU_SUBTYPE_SH4_2XX	/* its an SH4-202		*/
+
+#ifndef INPUT_CLOCK_RATE
+#define INPUT_CLOCK_RATE 27
+#endif
+
+#define TMU_CLK_DIVIDER	1024
+
+/*-----------------------------------------------------------------------
+ * Start addresses for the final memory configuration
+ * Assume we run out of uncached memory for the moment
+ */
+
+#define CFG_FLASH_BASE		0xA0000000	/* FLASH in P2 region */
+#define CFG_SDRAM_BASE		0x84000000      /* SDRAM in P1 region */
+
+#ifdef CONFIG_SH_MB442_128
+#	define CFG_SDRAM_SIZE		0x08000000	/* 128 MiB of LMI-Sys SDRAM */
+#else
+#	define CFG_SDRAM_SIZE		0x04000000	/* 64 MiB of LMI-Sys SDRAM */
+#endif
+
+#define CFG_MONITOR_LEN		0x00020000	/* Reserve 128 KiB for Monitor */
+#define CFG_MONITOR_BASE        CFG_FLASH_BASE
+#define CFG_MALLOC_LEN		(1 << 20)	/* Reserve 1 MiB for malloc */
+#define CFG_BOOTPARAMS_LEN	(128 << 10)
+#define CFG_GBL_DATA_SIZE	1024		/* Global data structures */
+
+#define CFG_MEMTEST_START	CFG_SDRAM_BASE
+#define CFG_MEMTEST_END		(CFG_SDRAM_BASE + CFG_SDRAM_SIZE - (3 << 20))
+
+#define CONFIG_BAUDRATE		115200
+#define CFG_BAUDRATE_TABLE	{ 9600, 19200, 38400, 57600, 115200 }
+
+#define XSTR(s) STR(s)
+#define STR(s) #s
+
+#define BOARD ufs910
+
+#if CFG_MONITOR_LEN == 0x00020000		/* 128 KiB */
+#	define MONITOR_SECTORS	"1:0"		/* 1 sector */
+#elif CFG_MONITOR_LEN == 0x00040000		/* 256 KiB */
+#	define MONITOR_SECTORS	"1:0-1"		/* 2 sectors */
+#else						/* unknown */
+#	error "Unable to determine sectors for monitor"
+#endif
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+		"board=" XSTR(BOARD) "_" XSTR(INPUT_CLOCK_RATE) "\0" \
+		"monitor_base=" XSTR(CFG_MONITOR_BASE) "\0" \
+		"monitor_len=" XSTR(CFG_MONITOR_LEN) "\0" \
+		"monitor_sec=" MONITOR_SECTORS "\0" \
+		"load_addr=" XSTR(CFG_LOAD_ADDR) "\0" \
+		"unprot=" \
+		  "protect off $monitor_sec\0" \
+		"update=" \
+		  "erase $monitor_sec;" \
+		  "cp.b $load_addr $monitor_base $monitor_len;" \
+		  "protect on $monitor_sec\0"
+
+/*--------------------------------------------------------------
+ * Command line configuration.
+ */
+
+#include <config_cmd_default.h>
+
+#undef CONFIG_CMD_CONSOLE
+#undef CONFIG_CMD_FPGA
+#undef CONFIG_CMD_SETGETDCR
+#undef CONFIG_CMD_NET
+#undef CONFIG_CMD_NFS
+
+/*--------------------------------------------------------------
+ * Serial console info
+ */
+
+/*
+ * We can use one of two methods for the "serial" console.
+ * We can either use the (normal hardware) internal ST ASC UART;
+ * OR we can use STMicroelectronics' DTF (Data Transfer Format)
+ * mechanism over a JTAG link to a remote GDB debugger.
+ */
+#if 1
+#	define CONFIG_STM_ASC_SERIAL	/* use a ST ASC UART */
+#else
+#	define CONFIG_STM_DTF_SERIAL	/* use DTF over JTAG */
+#endif
+
+/* choose which ST ASC UART to use */
+#if 1
+#	define CFG_STM_ASC_BASE		0xb8032000ul	/* UART2 */
+#else
+#	define CFG_STM_ASC_BASE		0xb8033000ul	/* UART3 */
+#endif
+
+/*---------------------------------------------------------------
+ * Ethernet driver config
+ */
+
+/*
+ * There are 2 options for ethernet:
+ *    The on-board SMSC LAN91C111
+ *    for STb7109, the on-chip STMAC & on-board PHY
+ */
+
+#if 1
+#	define CONFIG_DRIVER_SMC911X
+#	define CONFIG_SMC911X_BASE	0xa2000000ul
+#endif
+#if 0
+	/* Config for SMSC LAN91C111 (combined MAC+PHY) */
+#	define CONFIG_DRIVER_SMC91111
+#	define CONFIG_SMC91111_BASE	0xa2000300ul
+#endif
+#if 0
+	/* Config for on-chip STMAC + STE10xP PHY */
+#	define CONFIG_DRIVER_NETSTMAC
+#	define CFG_STM_STMAC_BASE	0xb8110000ul
+#	define CONFIG_STMAC_STE10XP
+#	define CONFIG_CMD_MII
+#endif
+
+#if defined(CONFIG_DRIVER_SMC911X) || defined(CONFIG_DRIVER_SMC91111) || defined(CONFIG_DRIVER_NETSTMAC)
+#	define CONFIG_CMD_NET
+#	define CONFIG_CMD_NFS
+#	define CONFIG_CMD_PING
+#	define CONFIG_CMD_DHCP
+#endif
+
+/*  If this board does not have eeprom for ethernet address so allow the user
+ *  to set it in the environment
+ */
+
+#define CONFIG_ENV_OVERWRITE
+
+/*---------------------------------------------------------------
+ * Misc drivers
+ */
+
+#define CONFIG_DRIVER_VFD
+#define CONFIG_DRIVER_BUTTONS
+
+#ifdef CONFIG_DRIVER_BUTTONS
+#define CONFIG_MISC_INIT_R
+#endif
+
+/*---------------------------------------------------------------
+ * USB driver config
+ */
+
+/* Choose if we want USB Mass-Storage Support */
+#define CONFIG_SH_STB7100_USB
+
+#ifdef CONFIG_SH_STB7100_USB
+#	define CONFIG_CMD_USB
+#	define CONFIG_USB_OHCI_NEW
+#	define CONFIG_USB_STORAGE
+#	define CFG_USB_OHCI_CPU_INIT
+#	define CFG_USB_BASE			0xb9100000
+#	define CFG_USB_OHCI_REGS_BASE		(CFG_USB_BASE+0xffc00)
+#	define CFG_USB_OHCI_SLOT_NAME		"ohci"
+#	define CFG_USB_OHCI_MAX_ROOT_PORTS	1
+#	define LITTLEENDIAN
+#endif	/* ifdef CONFIG_SH_STB7100_USB */
+
+/*---------------------------------------------------------------
+ * IDE driver config
+ */
+
+/* Choose one of the the following two: */
+//#define CONFIG_SH_STB7100_IDE
+#define CONFIG_SH_STB7100_SATA
+
+#ifdef CONFIG_SH_STB7100_IDE
+#	define CONFIG_CMD_IDE
+#	define CFG_PIO_MODE		4
+#	define CFG_IDE_MAXBUS		1
+#	define CFG_IDE_MAXDEVICE	1
+#ifdef CONFIG_SH_SE_MODE
+#	define CFG_ATA_BASE_ADDR	0xB2800000
+#else	/* CONFIG_SH_SE_MODE */
+#	define CFG_ATA_BASE_ADDR	0xA2800000
+#endif	/* CONFIG_SH_SE_MODE */
+#	define CFG_ATA_IDE0_OFFSET	0x00200000
+#	define CFG_ATA_REG_OFFSET	0
+#	define CFG_ATA_DATA_OFFSET	0
+#	define CFG_ATA_STRIDE		0x00020000
+#	define CFG_ATA_ALT_OFFSET	-0x0100000
+#endif	/* CONFIG_SH_STB7100_IDE */
+
+#ifdef CONFIG_SH_STB7100_SATA
+#	define CONFIG_CMD_IDE
+#	define CFG_PIO_MODE		4
+#	define CFG_IDE_MAXBUS		1
+#	define CFG_IDE_MAXDEVICE	1
+#	define CFG_ATA_BASE_ADDR	0xB9209800
+#	define CFG_ATA_IDE0_OFFSET	0x0
+#	define CFG_ATA_REG_OFFSET	0x0
+#	define CFG_ATA_DATA_OFFSET	0x0
+#	define CFG_ATA_STRIDE		0x4
+#	define CFG_ATA_ALT_OFFSET	0x8
+#endif	/* CONFIG_SH_STB7100_SATA */
+
+#if defined(CONFIG_SH_STB7100_IDE)  ||	\
+    defined(CONFIG_SH_STB7100_SATA) ||	\
+    defined(CONFIG_SH_STB7100_USB)
+#	define CFG_64BIT_LBA
+#	define CONFIG_LBA48
+#	define CONFIG_DOS_PARTITION
+#	define CONFIG_CMD_EXT2
+#	define CONFIG_CMD_FAT
+#endif
+
+/*-----------------------------------------------------------------------
+ * Miscellaneous configurable options
+ */
+
+#define CFG_HUSH_PARSER		1
+#define CFG_LONGHELP		1		/* undef to save memory		*/
+#define CFG_PROMPT		"ufs910> "	/* Monitor Command Prompt	*/
+#define CFG_PROMPT_HUSH_PS2	"> "
+#define CFG_CBSIZE		1024
+#define CFG_PBSIZE (CFG_CBSIZE+sizeof(CFG_PROMPT)+16) /* Print Buffer Size	*/
+#define CFG_MAXARGS		16		/* max number of command args	*/
+#define CFG_HZ			1000		/* HZ for timer ticks		*/
+#define CFG_LOAD_ADDR		CFG_SDRAM_BASE	/* default load address		*/
+#define CFG_BOOTMAPSZ		(16 << 20)	/* initial linux memory size	*/
+#define CONFIG_BOOTDELAY	10		/* default delay before executing bootcmd */
+#define CONFIG_ZERO_BOOTDELAY_CHECK
+
+#define CONFIG_CMDLINE_EDITING
+#define CONFIG_AUTO_COMPLETE       1
+
+/*-----------------------------------------------------------------------
+ * NOR FLASH organization
+ */
+
+/* STb7100 reference board organised as 8 MiB flash with 128 KiB blocks */
+#define CFG_FLASH_CFI_DRIVER
+#define CFG_FLASH_CFI
+#define CFG_FLASH_PROTECTION	1	/* use hardware flash protection	*/
+#define PHYS_FLASH_SIZE		0x00800000 /* 8 MB */
+#define CFG_MAX_FLASH_BANKS	2	/* max number of memory banks		*/
+#define CFG_MAX_FLASH_SECT	128	/* max number of sectors on one chip	*/
+#define CFG_FLASH_BANKS_LIST	{ CFG_FLASH_BASE, CFG_FLASH_BASE + PHYS_FLASH_SIZE }
+#define CFG_FLASH_EMPTY_INFO		/* test if each sector is empty		*/
+
+/*-----------------------------------------------------------------------
+ * Addresss, size, & location of U-boot's Environment Sector
+ */
+
+#define CFG_ENV_IS_IN_FLASH	1
+#define CFG_ENV_OFFSET		CFG_MONITOR_LEN
+#define CFG_ENV_ADDR		(CFG_FLASH_BASE + CFG_ENV_OFFSET)
+#define CFG_ENV_SIZE		0x10000
+#define CFG_ENV_SECT_SIZE	0x10000
+
+#endif	/* __CONFIG_H */
diff -Naur u-boot-1.3.1.org/Makefile u-boot-1.3.1/Makefile
--- u-boot-1.3.1.org/Makefile	2010-04-27 11:33:16.000000000 +0200
+++ u-boot-1.3.1/Makefile	2010-04-27 11:38:04.426655082 +0200
@@ -2671,6 +2671,16 @@
 ## SuperH SH4
 #########################################################################
 
+ufs910_config \
+ufs910_128_config :	unconfig
+	@mkdir -p $(obj)include $(obj)board/kathrein/ufs910
+	@echo "#define CONFIG_SH_STB7100   1" >>$(obj)include/config.h
+	@echo "#define CONFIG_SH_MB442     1" >>$(obj)include/config.h
+	@echo "#define CONFIG_UFS910       1" >>$(obj)include/config.h
+	$(if $(findstring 128,$@), \
+	@echo "#define CONFIG_SH_MB442_128 1" >>$(obj)include/config.h)
+	@$(MKCONFIG) -a ufs910 sh sh ufs910 kathrein stb7100
+
 mb411_config :		unconfig
 	@mkdir -p $(obj)include
 	@echo "#define CONFIG_SH_STB7100 1" >>$(obj)include/config.h
diff -Naur u-boot-1.3.1/lib_sh/board.c u-boot-1.3.1.good/lib_sh/board.c
--- u-boot-1.3.1/lib_sh/board.c	2010-05-01 23:39:25.013730673 +0200
+++ u-boot-1.3.1.good/lib_sh/board.c	2010-05-01 17:52:27.309969593 +0200
@@ -324,7 +324,7 @@
 static void sh_reset (void) __attribute__ ((noreturn));
 static void sh_reset (void)
 {
-#if 1
+#if !defined(CONFIG_UFS910)
 	/*
 	 * We will use the on-chip watchdog timer to force a
 	 * power-on-reset of the device.
@@ -358,6 +358,7 @@
 	sr |= (1 << 28);	/* set block bit */
 	asm ("ldc %0, sr": :"r" (sr));
 	asm volatile ("trapa #0");
+	for (;;);
 #endif
 }
 
